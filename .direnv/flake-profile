{
  "bashFunctions": {
    "_activatePkgs":" \n    local hostOffset targetOffset;\n    local pkg;\n    for hostOffset in \"${allPlatOffsets[@]}\";\n    do\n        local pkgsVar=\"${pkgAccumVarVars[hostOffset + 1]}\";\n        for targetOffset in \"${allPlatOffsets[@]}\";\n        do\n            (( hostOffset <= targetOffset )) || continue;\n            local pkgsRef=\"${pkgsVar}[$targetOffset - $hostOffset]\";\n            local pkgsSlice=\"${!pkgsRef}[@]\";\n            for pkg in ${!pkgsSlice+\"${!pkgsSlice}\"};\n            do\n                activatePackage \"$pkg\" \"$hostOffset\" \"$targetOffset\";\n            done;\n        done;\n    done\n",
    "_addRpathPrefix":" \n    if [ \"${NIX_NO_SELF_RPATH:-0}\" != 1 ]; then\n        export NIX_LDFLAGS=\"-rpath $1/lib ${NIX_LDFLAGS-}\";\n        if [ -n \"${NIX_LIB64_IN_SELF_RPATH:-}\" ]; then\n            export NIX_LDFLAGS=\"-rpath $1/lib64 ${NIX_LDFLAGS-}\";\n        fi;\n        if [ -n \"${NIX_LIB32_IN_SELF_RPATH:-}\" ]; then\n            export NIX_LDFLAGS=\"-rpath $1/lib32 ${NIX_LDFLAGS-}\";\n        fi;\n    fi\n",
    "_addToEnv":" \n    local depHostOffset depTargetOffset;\n    local pkg;\n    for depHostOffset in \"${allPlatOffsets[@]}\";\n    do\n        local hookVar=\"${pkgHookVarVars[depHostOffset + 1]}\";\n        local pkgsVar=\"${pkgAccumVarVars[depHostOffset + 1]}\";\n        for depTargetOffset in \"${allPlatOffsets[@]}\";\n        do\n            (( depHostOffset <= depTargetOffset )) || continue;\n            local hookRef=\"${hookVar}[$depTargetOffset - $depHostOffset]\";\n            if [[ -z \"${strictDeps-}\" ]]; then\n                local visitedPkgs=\"\";\n                for pkg in \"${pkgsBuildBuild[@]}\" \"${pkgsBuildHost[@]}\" \"${pkgsBuildTarget[@]}\" \"${pkgsHostHost[@]}\" \"${pkgsHostTarget[@]}\" \"${pkgsTargetTarget[@]}\";\n                do\n                    if [[ \"$visitedPkgs\" = *\"$pkg\"* ]]; then\n                        continue;\n                    fi;\n                    runHook \"${!hookRef}\" \"$pkg\";\n                    visitedPkgs+=\" $pkg\";\n                done;\n            else\n                local pkgsRef=\"${pkgsVar}[$depTargetOffset - $depHostOffset]\";\n                local pkgsSlice=\"${!pkgsRef}[@]\";\n                for pkg in ${!pkgsSlice+\"${!pkgsSlice}\"};\n                do\n                    runHook \"${!hookRef}\" \"$pkg\";\n                done;\n            fi;\n        done;\n    done\n",
    "_allFlags":" \n    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');\n    do\n        if (( \"${NIX_DEBUG:-0}\" >= 1 )); then\n            printf \"@%s@ -> %q\\n\" \"${varName}\" \"${!varName}\";\n        fi;\n        args+=(\"--subst-var\" \"$varName\");\n    done\n",
    "_assignFirst":" \n    local varName=\"$1\";\n    local REMOVE=REMOVE;\n    shift;\n    while (( $# )); do\n        if [ -n \"${!1-}\" ]; then\n            eval \"${varName}\"=\"$1\";\n            return;\n        fi;\n        shift;\n    done;\n    echo \"Error: _assignFirst found no valid variant!\";\n    return 1\n",
    "_callImplicitHook":" \n    local def=\"$1\";\n    local hookName=\"$2\";\n    if declare -F \"$hookName\" > /dev/null; then\n        \"$hookName\";\n    else\n        if type -p \"$hookName\" > /dev/null; then\n            source \"$hookName\";\n        else\n            if [ -n \"${!hookName:-}\" ]; then\n                eval \"${!hookName}\";\n            else\n                return \"$def\";\n            fi;\n        fi;\n    fi\n",
    "_defaultUnpack":" \n    local fn=\"$1\";\n    if [ -d \"$fn\" ]; then\n        cp -pr --reflink=auto -- \"$fn\" \"$(stripHash \"$fn\")\";\n    else\n        case \"$fn\" in \n            *.tar.xz | *.tar.lzma | *.txz)\n                xz -d < \"$fn\" | tar xf - --warning=no-timestamp\n            ;;\n            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)\n                tar xf \"$fn\" --warning=no-timestamp\n            ;;\n            *)\n                return 1\n            ;;\n        esac;\n    fi\n",
    "_doStrip":" \n    local -ra flags=(dontStripHost dontStripTarget);\n    local -ra debugDirs=(stripDebugList stripDebugListTarget);\n    local -ra allDirs=(stripAllList stripAllListTarget);\n    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);\n    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);\n    stripDebugList=${stripDebugList:-lib lib32 lib64 libexec bin sbin};\n    stripDebugListTarget=${stripDebugListTarget:-};\n    stripAllList=${stripAllList:-};\n    stripAllListTarget=${stripAllListTarget:-};\n    local i;\n    for i in ${!stripCmds[@]};\n    do\n        local -n flag=\"${flags[$i]}\";\n        local -n debugDirList=\"${debugDirs[$i]}\";\n        local -n allDirList=\"${allDirs[$i]}\";\n        local -n stripCmd=\"${stripCmds[$i]}\";\n        local -n ranlibCmd=\"${ranlibCmds[$i]}\";\n        if [[ -n \"${dontStrip-}\" || -n \"${flag-}\" ]] || ! type -f \"${stripCmd-}\" 2> /dev/null; then\n            continue;\n        fi;\n        stripDirs \"$stripCmd\" \"$ranlibCmd\" \"$debugDirList\" \"${stripDebugFlags:--S}\";\n        stripDirs \"$stripCmd\" \"$ranlibCmd\" \"$allDirList\" \"${stripAllFlags:--s}\";\n    done\n",
    "_eval":" \n    if declare -F \"$1\" > /dev/null 2>&1; then\n        \"$@\";\n    else\n        eval \"$1\";\n    fi\n",
    "_makeSymlinksRelative":" \n    local symlinkTarget;\n    if [ -n \"${dontRewriteSymlinks-}\" ]; then\n        return 0;\n    fi;\n    while IFS= read -r -d '' f; do\n        symlinkTarget=$(readlink \"$f\");\n        if [[ \"$symlinkTarget\"/ != \"$prefix\"/* ]]; then\n            continue;\n        fi;\n        if [ ! -e \"$symlinkTarget\" ]; then\n            echo \"the symlink $f is broken, it points to $symlinkTarget (which is missing)\";\n        fi;\n        echo \"rewriting symlink $f to be relative to $prefix\";\n        ln -snrf \"$symlinkTarget\" \"$f\";\n    done < <(find $prefix -type l -print0)\n",
    "_moveLib64":" \n    if [ \"${dontMoveLib64-}\" = 1 ]; then\n        return;\n    fi;\n    if [ ! -e \"$prefix/lib64\" -o -L \"$prefix/lib64\" ]; then\n        return;\n    fi;\n    echo \"moving $prefix/lib64/* to $prefix/lib\";\n    mkdir -p $prefix/lib;\n    shopt -s dotglob;\n    for i in $prefix/lib64/*;\n    do\n        mv --no-clobber \"$i\" $prefix/lib;\n    done;\n    shopt -u dotglob;\n    rmdir $prefix/lib64;\n    ln -s lib $prefix/lib64\n",
    "_moveSbin":" \n    if [ \"${dontMoveSbin-}\" = 1 ]; then\n        return;\n    fi;\n    if [ ! -e \"$prefix/sbin\" -o -L \"$prefix/sbin\" ]; then\n        return;\n    fi;\n    echo \"moving $prefix/sbin/* to $prefix/bin\";\n    mkdir -p $prefix/bin;\n    shopt -s dotglob;\n    for i in $prefix/sbin/*;\n    do\n        mv \"$i\" $prefix/bin;\n    done;\n    shopt -u dotglob;\n    rmdir $prefix/sbin;\n    ln -s bin $prefix/sbin\n",
    "_moveSystemdUserUnits":" \n    if [ \"${dontMoveSystemdUserUnits:-0}\" = 1 ]; then\n        return;\n    fi;\n    if [ ! -e \"${prefix:?}/lib/systemd/user\" ]; then\n        return;\n    fi;\n    local source=\"$prefix/lib/systemd/user\";\n    local target=\"$prefix/share/systemd/user\";\n    echo \"moving $source/* to $target\";\n    mkdir -p \"$target\";\n    ( shopt -s dotglob;\n    for i in \"$source\"/*;\n    do\n        mv \"$i\" \"$target\";\n    done );\n    rmdir \"$source\";\n    ln -s \"$target\" \"$source\"\n",
    "_moveToShare":" \n    forceShare=${forceShare:=man doc info};\n    if [[ -z \"$out\" ]]; then\n        return;\n    fi;\n    for d in $forceShare;\n    do\n        if [ -d \"$out/$d\" ]; then\n            if [ -d \"$out/share/$d\" ]; then\n                echo \"both $d/ and share/$d/ exist!\";\n            else\n                echo \"moving $out/$d to $out/share/$d\";\n                mkdir -p $out/share;\n                mv $out/$d $out/share/;\n            fi;\n        fi;\n    done\n",
    "_multioutConfig":" \n    if [ \"$outputs\" = \"out\" ] || [ -z \"${setOutputFlags-1}\" ]; then\n        return;\n    fi;\n    if [ -z \"$shareDocName\" ]; then\n        local confScript=\"$configureScript\";\n        if [ -z \"$confScript\" ] && [ -x ./configure ]; then\n            confScript=./configure;\n        fi;\n        if [ -f \"$confScript\" ]; then\n            local shareDocName=\"$(sed -n \"s/^PACKAGE_TARNAME='\\(.*\\)'$/\\1/p\" < \"$confScript\")\";\n        fi;\n        if [ -z \"$shareDocName\" ] || echo \"$shareDocName\" | grep -q '[^a-zA-Z0-9_-]'; then\n            shareDocName=\"$(echo \"$name\" | sed 's/-[^a-zA-Z].*//')\";\n        fi;\n    fi;\n    configureFlags=\"        --bindir=${!outputBin}/bin --sbindir=${!outputBin}/sbin         --includedir=${!outputInclude}/include --oldincludedir=${!outputInclude}/include         --mandir=${!outputMan}/share/man --infodir=${!outputInfo}/share/info         --docdir=${!outputDoc}/share/doc/${shareDocName}         --libdir=${!outputLib}/lib --libexecdir=${!outputLib}/libexec         --localedir=${!outputLib}/share/locale         $configureFlags\";\n    installFlags=\"        pkgconfigdir=${!outputDev}/lib/pkgconfig         m4datadir=${!outputDev}/share/aclocal aclocaldir=${!outputDev}/share/aclocal         $installFlags\"\n",
    "_multioutDevs":" \n    if [ \"$outputs\" = \"out\" ] || [ -z \"${moveToDev-1}\" ]; then\n        return;\n    fi;\n    moveToOutput include \"${!outputInclude}\";\n    moveToOutput lib/pkgconfig \"${!outputDev}\";\n    moveToOutput share/pkgconfig \"${!outputDev}\";\n    moveToOutput lib/cmake \"${!outputDev}\";\n    moveToOutput share/aclocal \"${!outputDev}\";\n    for f in \"${!outputDev}\"/{lib,share}/pkgconfig/*.pc;\n    do\n        echo \"Patching '$f' includedir to output ${!outputInclude}\";\n        sed -i \"/^includedir=/s,=\\${prefix},=${!outputInclude},\" \"$f\";\n    done\n",
    "_multioutDocs":" \n    local REMOVE=REMOVE;\n    moveToOutput share/info \"${!outputInfo}\";\n    moveToOutput share/doc \"${!outputDoc}\";\n    moveToOutput share/gtk-doc \"${!outputDevdoc}\";\n    moveToOutput share/devhelp/books \"${!outputDevdoc}\";\n    moveToOutput share/man \"${!outputMan}\";\n    moveToOutput share/man/man3 \"${!outputDevman}\"\n",
    "_multioutPropagateDev":" \n    if [ \"$outputs\" = \"out\" ]; then\n        return;\n    fi;\n    local outputFirst;\n    for outputFirst in $outputs;\n    do\n        break;\n    done;\n    local propagaterOutput=\"$outputDev\";\n    if [ -z \"$propagaterOutput\" ]; then\n        propagaterOutput=\"$outputFirst\";\n    fi;\n    if [ -z \"${propagatedBuildOutputs+1}\" ]; then\n        local po_dirty=\"$outputBin $outputInclude $outputLib\";\n        set +o pipefail;\n        propagatedBuildOutputs=`echo \"$po_dirty\"             | tr -s ' ' '\\n' | grep -v -F \"$propagaterOutput\"             | sort -u | tr '\\n' ' ' `;\n        set -o pipefail;\n    fi;\n    if [ -z \"$propagatedBuildOutputs\" ]; then\n        return;\n    fi;\n    mkdir -p \"${!propagaterOutput}\"/nix-support;\n    for output in $propagatedBuildOutputs;\n    do\n        echo -n \" ${!output}\" >> \"${!propagaterOutput}\"/nix-support/propagated-build-inputs;\n    done\n",
    "_overrideFirst":" \n    if [ -z \"${!1-}\" ]; then\n        _assignFirst \"$@\";\n    fi\n",
    "_pruneLibtoolFiles":" \n    if [ \"${dontPruneLibtoolFiles-}\" ] || [ ! -e \"$prefix\" ]; then\n        return;\n    fi;\n    find \"$prefix\" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \\; -exec grep -q \"^old_library=''\" {} \\; -exec sed -i {} -e \"/^dependency_libs='[^']/ c dependency_libs='' #pruned\" \\;\n",
    "_updateSourceDateEpochFromSourceRoot":" \n    if [ -n \"$sourceRoot\" ]; then\n        updateSourceDateEpoch \"$sourceRoot\";\n    fi\n",
    "activatePackage":" \n    local pkg=\"$1\";\n    local -r hostOffset=\"$2\";\n    local -r targetOffset=\"$3\";\n    (( hostOffset <= targetOffset )) || exit -1;\n    if [ -f \"$pkg\" ]; then\n        source \"$pkg\";\n    fi;\n    if [[ -z \"${strictDeps-}\" || \"$hostOffset\" -le -1 ]]; then\n        addToSearchPath _PATH \"$pkg/bin\";\n    fi;\n    if (( hostOffset <= -1 )); then\n        addToSearchPath _XDG_DATA_DIRS \"$pkg/share\";\n    fi;\n    if [[ \"$hostOffset\" -eq 0 && -d \"$pkg/bin\" ]]; then\n        addToSearchPath _HOST_PATH \"$pkg/bin\";\n    fi;\n    if [[ -f \"$pkg/nix-support/setup-hook\" ]]; then\n        source \"$pkg/nix-support/setup-hook\";\n    fi\n",
    "addEnvHooks":" \n    local depHostOffset=\"$1\";\n    shift;\n    local pkgHookVarsSlice=\"${pkgHookVarVars[$depHostOffset + 1]}[@]\";\n    local pkgHookVar;\n    for pkgHookVar in \"${!pkgHookVarsSlice}\";\n    do\n        eval \"${pkgHookVar}s\"'+=(\"$@\")';\n    done\n",
    "addPythonPath":" \n    addToSearchPathWithCustomDelimiter : PYTHONPATH $1/lib/python3.11/site-packages\n",
    "addToSearchPath":" \n    addToSearchPathWithCustomDelimiter \":\" \"$@\"\n",
    "addToSearchPathWithCustomDelimiter":" \n    local delimiter=\"$1\";\n    local varName=\"$2\";\n    local dir=\"$3\";\n    if [[ -d \"$dir\" && \"${!varName:+${delimiter}${!varName}${delimiter}}\" != *\"${delimiter}${dir}${delimiter}\"* ]]; then\n        export \"${varName}=${!varName:+${!varName}${delimiter}}${dir}\";\n    fi\n",
    "auditTmpdir":" \n    local dir=\"$1\";\n    [ -e \"$dir\" ] || return 0;\n    header \"checking for references to $TMPDIR/ in $dir...\";\n    local i;\n    while IFS= read -r -d '' i; do\n        if [[ \"$i\" =~ .build-id ]]; then\n            continue;\n        fi;\n        if isELF \"$i\"; then\n            if { \n                printf :;\n                patchelf --print-rpath \"$i\"\n            } | grep -q -F \":$TMPDIR/\"; then\n                echo \"RPATH of binary $i contains a forbidden reference to $TMPDIR/\";\n                exit 1;\n            fi;\n        fi;\n        if isScript \"$i\"; then\n            if [ -e \"$(dirname \"$i\")/.$(basename \"$i\")-wrapped\" ]; then\n                if grep -q -F \"$TMPDIR/\" \"$i\"; then\n                    echo \"wrapper script $i contains a forbidden reference to $TMPDIR/\";\n                    exit 1;\n                fi;\n            fi;\n        fi;\n    done < <(find \"$dir\" -type f -print0);\n    stopNest\n",
    "bintoolsWrapper_addLDVars":" \n    local role_post;\n    getHostRoleEnvHook;\n    if [[ -d \"$1/lib64\" && ! -L \"$1/lib64\" ]]; then\n        export NIX_LDFLAGS${role_post}+=\" -L$1/lib64\";\n    fi;\n    if [[ -d \"$1/lib\" ]]; then\n        local -a glob=($1/lib/lib*);\n        if [ \"${#glob[*]}\" -gt 0 ]; then\n            export NIX_LDFLAGS${role_post}+=\" -L$1/lib\";\n        fi;\n    fi\n",
    "buildPhase":" \n    runHook preBuild;\n    : ${makeFlags=};\n    if [[ -z \"$makeFlags\" && -z \"${makefile:-}\" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then\n        echo \"no Makefile, doing nothing\";\n    else\n        foundMakefile=1;\n        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags \"${makeFlagsArray[@]}\" $buildFlags \"${buildFlagsArray[@]}\");\n        echoCmd 'build flags' \"${flagsArray[@]}\";\n        make ${makefile:+-f $makefile} \"${flagsArray[@]}\";\n        unset flagsArray;\n    fi;\n    runHook postBuild\n",
    "ccWrapper_addCVars":" \n    local role_post;\n    getHostRoleEnvHook;\n    if [ -d \"$1/include\" ]; then\n        export NIX_CFLAGS_COMPILE${role_post}+=\" -isystem $1/include\";\n    fi;\n    if [ -d \"$1/Library/Frameworks\" ]; then\n        export NIX_CFLAGS_COMPILE${role_post}+=\" -iframework $1/Library/Frameworks\";\n    fi\n",
    "checkPhase":" \n    runHook preCheck;\n    if [[ -z \"${foundMakefile:-}\" ]]; then\n        echo \"no Makefile or custom checkPhase, doing nothing\";\n        runHook postCheck;\n        return;\n    fi;\n    if [[ -z \"${checkTarget:-}\" ]]; then\n        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then\n            checkTarget=check;\n        else\n            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then\n                checkTarget=test;\n            fi;\n        fi;\n    fi;\n    if [[ -z \"${checkTarget:-}\" ]]; then\n        echo \"no check/test target in ${makefile:-Makefile}, doing nothing\";\n    else\n        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags \"${makeFlagsArray[@]}\" ${checkFlags:-VERBOSE=y} \"${checkFlagsArray[@]}\" ${checkTarget});\n        echoCmd 'check flags' \"${flagsArray[@]}\";\n        make ${makefile:+-f $makefile} \"${flagsArray[@]}\";\n        unset flagsArray;\n    fi;\n    runHook postCheck\n",
    "closeNest":" \n    true\n",
    "compressManPages":" \n    local dir=\"$1\";\n    if [ -L \"$dir\"/share ] || [ -L \"$dir\"/share/man ] || [ ! -d \"$dir/share/man\" ]; then\n        return;\n    fi;\n    echo \"gzipping man pages under $dir/share/man/\";\n    find \"$dir\"/share/man/ -type f -a '!' -regex '.*\\.\\(bz2\\|gz\\|xz\\)$' -print0 | while IFS= read -r -d '' f; do\n        if gzip -c -n \"$f\" > \"$f\".gz; then\n            rm \"$f\";\n        else\n            rm \"$f\".gz;\n        fi;\n    done;\n    find \"$dir\"/share/man/ -type l -a '!' -regex '.*\\.\\(bz2\\|gz\\|xz\\)$' -print0 | sort -z | while IFS= read -r -d '' f; do\n        local target;\n        target=\"$(readlink -f \"$f\")\";\n        if [ -f \"$target\".gz ]; then\n            ln -sf \"$target\".gz \"$f\".gz && rm \"$f\";\n        fi;\n    done\n",
    "configurePhase":" \n    runHook preConfigure;\n    : ${configureScript=};\n    : ${configureFlags=};\n    if [[ -z \"$configureScript\" && -x ./configure ]]; then\n        configureScript=./configure;\n    fi;\n    if [ -z \"${dontFixLibtool:-}\" ]; then\n        export lt_cv_deplibs_check_method=\"${lt_cv_deplibs_check_method-pass_all}\";\n        local i;\n        find . -iname \"ltmain.sh\" -print0 | while IFS='' read -r -d '' i; do\n            echo \"fixing libtool script $i\";\n            fixLibtool \"$i\";\n        done;\n        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);\n        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \\; -exec touch -r {} \"$CONFIGURE_MTIME_REFERENCE\" \\; -exec sed -i s_/usr/bin/file_file_g {} \\; -exec touch -r \"$CONFIGURE_MTIME_REFERENCE\" {} \\;;\n        rm -f \"$CONFIGURE_MTIME_REFERENCE\";\n    fi;\n    if [[ -z \"${dontAddPrefix:-}\" && -n \"$prefix\" ]]; then\n        configureFlags=\"${prefixKey:---prefix=}$prefix $configureFlags\";\n    fi;\n    if [[ -f \"$configureScript\" ]]; then\n        if [ -z \"${dontAddDisableDepTrack:-}\" ]; then\n            if grep -q dependency-tracking \"$configureScript\"; then\n                configureFlags=\"--disable-dependency-tracking $configureFlags\";\n            fi;\n        fi;\n        if [ -z \"${dontDisableStatic:-}\" ]; then\n            if grep -q enable-static \"$configureScript\"; then\n                configureFlags=\"--disable-static $configureFlags\";\n            fi;\n        fi;\n    fi;\n    if [ -n \"$configureScript\" ]; then\n        local flagsArray=($configureFlags \"${configureFlagsArray[@]}\");\n        echoCmd 'configure flags' \"${flagsArray[@]}\";\n        $configureScript \"${flagsArray[@]}\";\n        unset flagsArray;\n    else\n        echo \"no configure script, doing nothing\";\n    fi;\n    runHook postConfigure\n",
    "consumeEntire":" \n    if IFS='' read -r -d '' $1; then\n        echo \"consumeEntire(): ERROR: Input null bytes, won't process\" 1>&2;\n        return 1;\n    fi\n",
    "distPhase":" \n    runHook preDist;\n    local flagsArray=($distFlags \"${distFlagsArray[@]}\" ${distTarget:-dist});\n    echo 'dist flags: %q' \"${flagsArray[@]}\";\n    make ${makefile:+-f $makefile} \"${flagsArray[@]}\";\n    if [ \"${dontCopyDist:-0}\" != 1 ]; then\n        mkdir -p \"$out/tarballs\";\n        cp -pvd ${tarballs:-*.tar.gz} \"$out/tarballs\";\n    fi;\n    runHook postDist\n",
    "dumpVars":" \n    if [ \"${noDumpEnvVars:-0}\" != 1 ]; then\n        export 2> /dev/null >| \"$NIX_BUILD_TOP/env-vars\" || true;\n    fi\n",
    "echoCmd":" \n    printf \"%s:\" \"$1\";\n    shift;\n    printf ' %q' \"$@\";\n    echo\n",
    "exitHandler":" \n    exitCode=\"$?\";\n    set +e;\n    if [ -n \"${showBuildStats:-}\" ]; then\n        read -r -d '' -a buildTimes < <(times);\n        echo \"build times:\";\n        echo \"user time for the shell             ${buildTimes[0]}\";\n        echo \"system time for the shell           ${buildTimes[1]}\";\n        echo \"user time for all child processes   ${buildTimes[2]}\";\n        echo \"system time for all child processes ${buildTimes[3]}\";\n    fi;\n    if (( \"$exitCode\" != 0 )); then\n        runHook failureHook;\n        if [ -n \"${succeedOnFailure:-}\" ]; then\n            echo \"build failed with exit code $exitCode (ignored)\";\n            mkdir -p \"$out/nix-support\";\n            printf \"%s\" \"$exitCode\" > \"$out/nix-support/failed\";\n            return 0;\n        fi;\n    else\n        runHook exitHook;\n    fi;\n    return \"$exitCode\"\n",
    "findInputs":" \n    local -r pkg=\"$1\";\n    local -r hostOffset=\"$2\";\n    local -r targetOffset=\"$3\";\n    (( hostOffset <= targetOffset )) || exit -1;\n    local varVar=\"${pkgAccumVarVars[hostOffset + 1]}\";\n    local varRef=\"$varVar[$((targetOffset - hostOffset))]\";\n    local var=\"${!varRef}\";\n    unset -v varVar varRef;\n    local varSlice=\"$var[*]\";\n    case \"${!varSlice-}\" in \n        *\" $pkg \"*)\n            return 0\n        ;;\n    esac;\n    unset -v varSlice;\n    eval \"$var\"'+=(\"$pkg\")';\n    if ! [ -e \"$pkg\" ]; then\n        echo \"build input $pkg does not exist\" 1>&2;\n        exit 1;\n    fi;\n    function mapOffset () \n    { \n        local -r inputOffset=\"$1\";\n        local -n outputOffset=\"$2\";\n        if (( inputOffset <= 0 )); then\n            outputOffset=$((inputOffset + hostOffset));\n        else\n            outputOffset=$((inputOffset - 1 + targetOffset));\n        fi\n    };\n    local relHostOffset;\n    for relHostOffset in \"${allPlatOffsets[@]}\";\n    do\n        local files=\"${propagatedDepFilesVars[relHostOffset + 1]}\";\n        local hostOffsetNext;\n        mapOffset \"$relHostOffset\" hostOffsetNext;\n        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;\n        local relTargetOffset;\n        for relTargetOffset in \"${allPlatOffsets[@]}\";\n        do\n            (( \"$relHostOffset\" <= \"$relTargetOffset\" )) || continue;\n            local fileRef=\"${files}[$relTargetOffset - $relHostOffset]\";\n            local file=\"${!fileRef}\";\n            unset -v fileRef;\n            local targetOffsetNext;\n            mapOffset \"$relTargetOffset\" targetOffsetNext;\n            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;\n            [[ -f \"$pkg/nix-support/$file\" ]] || continue;\n            local pkgNext;\n            read -r -d '' pkgNext < \"$pkg/nix-support/$file\" || true;\n            for pkgNext in $pkgNext;\n            do\n                findInputs \"$pkgNext\" \"$hostOffsetNext\" \"$targetOffsetNext\";\n            done;\n        done;\n    done\n",
    "fixLibtool":" \n    local search_path;\n    for flag in $NIX_LDFLAGS;\n    do\n        case $flag in \n            -L*)\n                search_path+=\" ${flag#-L}\"\n            ;;\n        esac;\n    done;\n    sed -i \"$1\" -e \"s^eval \\(sys_lib_search_path=\\).*^\\1'$search_path'^\" -e 's^eval sys_lib_.+search_path=.*^^'\n",
    "fixupPhase":" \n    local output;\n    for output in $outputs;\n    do\n        if [ -e \"${!output}\" ]; then\n            chmod -R u+w \"${!output}\";\n        fi;\n    done;\n    runHook preFixup;\n    local output;\n    for output in $outputs;\n    do\n        prefix=\"${!output}\" runHook fixupOutput;\n    done;\n    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);\n    declare -ra flatFiles=(\"${propagatedBuildDepFiles[@]}\" \"${propagatedHostDepFiles[@]}\" \"${propagatedTargetDepFiles[@]}\");\n    local propagatedInputsIndex;\n    for propagatedInputsIndex in \"${!flatVars[@]}\";\n    do\n        local propagatedInputsSlice=\"${flatVars[$propagatedInputsIndex]}[@]\";\n        local propagatedInputsFile=\"${flatFiles[$propagatedInputsIndex]}\";\n        [[ -n \"${!propagatedInputsSlice}\" ]] || continue;\n        mkdir -p \"${!outputDev}/nix-support\";\n        printWords ${!propagatedInputsSlice} > \"${!outputDev}/nix-support/$propagatedInputsFile\";\n    done;\n    if [ -n \"${setupHook:-}\" ]; then\n        mkdir -p \"${!outputDev}/nix-support\";\n        substituteAll \"$setupHook\" \"${!outputDev}/nix-support/setup-hook\";\n    fi;\n    if [ -n \"${setupHooks:-}\" ]; then\n        mkdir -p \"${!outputDev}/nix-support\";\n        local hook;\n        for hook in $setupHooks;\n        do\n            local content;\n            consumeEntire content < \"$hook\";\n            substituteAllStream content \"file '$hook'\" >> \"${!outputDev}/nix-support/setup-hook\";\n            unset -v content;\n        done;\n        unset -v hook;\n    fi;\n    if [ -n \"${propagatedUserEnvPkgs:-}\" ]; then\n        mkdir -p \"${!outputBin}/nix-support\";\n        printWords $propagatedUserEnvPkgs > \"${!outputBin}/nix-support/propagated-user-env-packages\";\n    fi;\n    runHook postFixup\n",
    "genericBuild":" \n    if [ -f \"${buildCommandPath:-}\" ]; then\n        source \"$buildCommandPath\";\n        return;\n    fi;\n    if [ -n \"${buildCommand:-}\" ]; then\n        eval \"$buildCommand\";\n        return;\n    fi;\n    if [ -z \"${phases:-}\" ]; then\n        phases=\"${prePhases:-} unpackPhase patchPhase ${preConfigurePhases:-}             configurePhase ${preBuildPhases:-} buildPhase checkPhase             ${preInstallPhases:-} installPhase ${preFixupPhases:-} fixupPhase installCheckPhase             ${preDistPhases:-} distPhase ${postPhases:-}\";\n    fi;\n    for curPhase in $phases;\n    do\n        if [[ \"$curPhase\" = unpackPhase && -n \"${dontUnpack:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = patchPhase && -n \"${dontPatch:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = configurePhase && -n \"${dontConfigure:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = buildPhase && -n \"${dontBuild:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = checkPhase && -z \"${doCheck:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = installPhase && -n \"${dontInstall:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = fixupPhase && -n \"${dontFixup:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = installCheckPhase && -z \"${doInstallCheck:-}\" ]]; then\n            continue;\n        fi;\n        if [[ \"$curPhase\" = distPhase && -z \"${doDist:-}\" ]]; then\n            continue;\n        fi;\n        if [[ -n $NIX_LOG_FD ]]; then\n            echo \"@nix { \\\"action\\\": \\\"setPhase\\\", \\\"phase\\\": \\\"$curPhase\\\" }\" 1>&$NIX_LOG_FD;\n        fi;\n        showPhaseHeader \"$curPhase\";\n        dumpVars;\n        local startTime=$(date +\"%s\");\n        eval \"${!curPhase:-$curPhase}\";\n        local endTime=$(date +\"%s\");\n        showPhaseFooter \"$curPhase\" \"$startTime\" \"$endTime\";\n        if [ \"$curPhase\" = unpackPhase ]; then\n            [ -z \"${sourceRoot}\" ] || chmod +x \"${sourceRoot}\";\n            cd \"${sourceRoot:-.}\";\n        fi;\n    done\n",
    "getHostRole":" \n    getRole \"$hostOffset\"\n",
    "getHostRoleEnvHook":" \n    getRole \"$depHostOffset\"\n",
    "getRole":" \n    case $1 in \n        -1)\n            role_post='_FOR_BUILD'\n        ;;\n        0)\n            role_post=''\n        ;;\n        1)\n            role_post='_FOR_TARGET'\n        ;;\n        *)\n            echo \"binutils-wrapper-2.38: used as improper sort of dependency\" 1>&2;\n            return 1\n        ;;\n    esac\n",
    "getTargetRole":" \n    getRole \"$targetOffset\"\n",
    "getTargetRoleEnvHook":" \n    getRole \"$depTargetOffset\"\n",
    "getTargetRoleWrapper":" \n    case $targetOffset in \n        -1)\n            export NIX_BINTOOLS_WRAPPER_TARGET_BUILD_x86_64_unknown_linux_gnu=1\n        ;;\n        0)\n            export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu=1\n        ;;\n        1)\n            export NIX_BINTOOLS_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu=1\n        ;;\n        *)\n            echo \"binutils-wrapper-2.38: used as improper sort of dependency\" 1>&2;\n            return 1\n        ;;\n    esac\n",
    "header":" \n    echo \"$1\"\n",
    "installCheckPhase":" \n    runHook preInstallCheck;\n    if [[ -z \"${foundMakefile:-}\" ]]; then\n        echo \"no Makefile or custom installCheckPhase, doing nothing\";\n    else\n        if [[ -z \"${installCheckTarget:-}\" ]] && ! make -n ${makefile:+-f $makefile} ${installCheckTarget:-installcheck} > /dev/null 2>&1; then\n            echo \"no installcheck target in ${makefile:-Makefile}, doing nothing\";\n        else\n            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags \"${makeFlagsArray[@]}\" $installCheckFlags \"${installCheckFlagsArray[@]}\" ${installCheckTarget:-installcheck});\n            echoCmd 'installcheck flags' \"${flagsArray[@]}\";\n            make ${makefile:+-f $makefile} \"${flagsArray[@]}\";\n            unset flagsArray;\n        fi;\n    fi;\n    runHook postInstallCheck\n",
    "installPhase":" \n    runHook preInstall;\n    if [ -n \"$prefix\" ]; then\n        mkdir -p \"$prefix\";\n    fi;\n    local flagsArray=(SHELL=$SHELL $makeFlags \"${makeFlagsArray[@]}\" $installFlags \"${installFlagsArray[@]}\" ${installTargets:-install});\n    echoCmd 'install flags' \"${flagsArray[@]}\";\n    make ${makefile:+-f $makefile} \"${flagsArray[@]}\";\n    unset flagsArray;\n    runHook postInstall\n",
    "isELF":" \n    local fn=\"$1\";\n    local fd;\n    local magic;\n    exec {fd}< \"$fn\";\n    read -r -n 4 -u \"$fd\" magic;\n    exec {fd}>&-;\n    if [ \"$magic\" = 'ELF' ]; then\n        return 0;\n    else\n        return 1;\n    fi\n",
    "isMachO":" \n    local fn=\"$1\";\n    local fd;\n    local magic;\n    exec {fd}< \"$fn\";\n    read -r -n 4 -u \"$fd\" magic;\n    exec {fd}>&-;\n    if [[ \"$magic\" = $(echo -ne \"\\xfe\\xed\\xfa\\xcf\") || \"$magic\" = $(echo -ne \"\\xcf\\xfa\\xed\\xfe\") ]]; then\n        return 0;\n    else\n        if [[ \"$magic\" = $(echo -ne \"\\xfe\\xed\\xfa\\xce\") || \"$magic\" = $(echo -ne \"\\xce\\xfa\\xed\\xfe\") ]]; then\n            return 0;\n        else\n            if [[ \"$magic\" = $(echo -ne \"\\xca\\xfe\\xba\\xbe\") || \"$magic\" = $(echo -ne \"\\xbe\\xba\\xfe\\xca\") ]]; then\n                return 0;\n            else\n                return 1;\n            fi;\n        fi;\n    fi\n",
    "isScript":" \n    local fn=\"$1\";\n    local fd;\n    local magic;\n    exec {fd}< \"$fn\";\n    read -r -n 2 -u \"$fd\" magic;\n    exec {fd}>&-;\n    if [[ \"$magic\" =~ \\#! ]]; then\n        return 0;\n    else\n        return 1;\n    fi\n",
    "mapOffset":" \n    local -r inputOffset=\"$1\";\n    local -n outputOffset=\"$2\";\n    if (( inputOffset <= 0 )); then\n        outputOffset=$((inputOffset + hostOffset));\n    else\n        outputOffset=$((inputOffset - 1 + targetOffset));\n    fi\n",
    "moveToOutput":" \n    local patt=\"$1\";\n    local dstOut=\"$2\";\n    local output;\n    for output in $outputs;\n    do\n        if [ \"${!output}\" = \"$dstOut\" ]; then\n            continue;\n        fi;\n        local srcPath;\n        for srcPath in \"${!output}\"/$patt;\n        do\n            if [ ! -e \"$srcPath\" ] && [ ! -L \"$srcPath\" ]; then\n                continue;\n            fi;\n            if [ \"$dstOut\" = REMOVE ]; then\n                echo \"Removing $srcPath\";\n                rm -r \"$srcPath\";\n            else\n                local dstPath=\"$dstOut${srcPath#${!output}}\";\n                echo \"Moving $srcPath to $dstPath\";\n                if [ -d \"$dstPath\" ] && [ -d \"$srcPath\" ]; then\n                    rmdir \"$srcPath\" --ignore-fail-on-non-empty;\n                    if [ -d \"$srcPath\" ]; then\n                        mv -t \"$dstPath\" \"$srcPath\"/*;\n                        rmdir \"$srcPath\";\n                    fi;\n                else\n                    mkdir -p \"$(readlink -m \"$dstPath/..\")\";\n                    mv \"$srcPath\" \"$dstPath\";\n                fi;\n            fi;\n            local srcParent=\"$(readlink -m \"$srcPath/..\")\";\n            if rmdir \"$srcParent\"; then\n                echo \"Removing empty $srcParent/ and (possibly) its parents\";\n                rmdir -p --ignore-fail-on-non-empty \"$(readlink -m \"$srcParent/..\")\" 2> /dev/null || true;\n            fi;\n        done;\n    done\n",
    "patchELF":" \n    local dir=\"$1\";\n    [ -e \"$dir\" ] || return 0;\n    header \"shrinking RPATHs of ELF executables and libraries in $dir\";\n    local i;\n    while IFS= read -r -d '' i; do\n        if [[ \"$i\" =~ .build-id ]]; then\n            continue;\n        fi;\n        if ! isELF \"$i\"; then\n            continue;\n        fi;\n        echo \"shrinking $i\";\n        patchelf --shrink-rpath \"$i\" || true;\n    done < <(find \"$dir\" -type f -print0);\n    stopNest\n",
    "patchPhase":" \n    runHook prePatch;\n    for i in ${patches:-};\n    do\n        header \"applying patch $i\" 3;\n        local uncompress=cat;\n        case \"$i\" in \n            *.gz)\n                uncompress=\"gzip -d\"\n            ;;\n            *.bz2)\n                uncompress=\"bzip2 -d\"\n            ;;\n            *.xz)\n                uncompress=\"xz -d\"\n            ;;\n            *.lzma)\n                uncompress=\"lzma -d\"\n            ;;\n        esac;\n        $uncompress < \"$i\" 2>&1 | patch ${patchFlags:--p1};\n    done;\n    runHook postPatch\n",
    "patchShebangs":" \n    local pathName;\n    if [[ \"$1\" == \"--host\" ]]; then\n        pathName=HOST_PATH;\n        shift;\n    else\n        if [[ \"$1\" == \"--build\" ]]; then\n            pathName=PATH;\n            shift;\n        fi;\n    fi;\n    echo \"patching script interpreter paths in $@\";\n    local f;\n    local oldPath;\n    local newPath;\n    local arg0;\n    local args;\n    local oldInterpreterLine;\n    local newInterpreterLine;\n    if [[ $# -eq 0 ]]; then\n        echo \"No arguments supplied to patchShebangs\" 1>&2;\n        return 0;\n    fi;\n    local f;\n    while IFS= read -r -d '' f; do\n        isScript \"$f\" || continue;\n        read -r oldInterpreterLine < \"$f\";\n        read -r oldPath arg0 args <<< \"${oldInterpreterLine:2}\";\n        if [[ -z \"$pathName\" ]]; then\n            if [[ -n $strictDeps && $f == \"$NIX_STORE\"* ]]; then\n                pathName=HOST_PATH;\n            else\n                pathName=PATH;\n            fi;\n        fi;\n        if [[ \"$oldPath\" == *\"/bin/env\" ]]; then\n            if [[ $arg0 == \"-\"* || $arg0 == *\"=\"* ]]; then\n                echo \"$f: unsupported interpreter directive \\\"$oldInterpreterLine\\\" (set dontPatchShebangs=1 and handle shebang patching yourself)\" 1>&2;\n                exit 1;\n            fi;\n            newPath=\"$(PATH=\"${!pathName}\" command -v \"$arg0\" || true)\";\n        else\n            if [[ -z $oldPath ]]; then\n                oldPath=\"/bin/sh\";\n            fi;\n            newPath=\"$(PATH=\"${!pathName}\" command -v \"$(basename \"$oldPath\")\" || true)\";\n            args=\"$arg0 $args\";\n        fi;\n        newInterpreterLine=\"$newPath $args\";\n        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};\n        if [[ -n \"$oldPath\" && \"${oldPath:0:${#NIX_STORE}}\" != \"$NIX_STORE\" ]]; then\n            if [[ -n \"$newPath\" && \"$newPath\" != \"$oldPath\" ]]; then\n                echo \"$f: interpreter directive changed from \\\"$oldInterpreterLine\\\" to \\\"$newInterpreterLine\\\"\";\n                escapedInterpreterLine=${newInterpreterLine//\\\\/\\\\\\\\};\n                timestamp=$(stat --printf \"%y\" \"$f\");\n                sed -i -e \"1 s|.*|#\\!$escapedInterpreterLine|\" \"$f\";\n                touch --date \"$timestamp\" \"$f\";\n            fi;\n        fi;\n    done < <(find \"$@\" -type f -perm -0100 -print0);\n    stopNest\n",
    "patchShebangsAuto":" \n    if [[ -z \"${dontPatchShebangs-}\" && -e \"$prefix\" ]]; then\n        if [[ \"$output\" != out && \"$output\" = \"$outputDev\" ]]; then\n            patchShebangs --build \"$prefix\";\n        else\n            patchShebangs --host \"$prefix\";\n        fi;\n    fi\n",
    "printLines":" \n    (( \"$#\" > 0 )) || return 0;\n    printf '%s\\n' \"$@\"\n",
    "printWords":" \n    (( \"$#\" > 0 )) || return 0;\n    printf '%s ' \"$@\"\n",
    "runHook":" \n    local hookName=\"$1\";\n    shift;\n    local hooksSlice=\"${hookName%Hook}Hooks[@]\";\n    local hook;\n    for hook in \"_callImplicitHook 0 $hookName\" ${!hooksSlice+\"${!hooksSlice}\"};\n    do\n        _eval \"$hook\" \"$@\";\n    done;\n    return 0\n",
    "runOneHook":" \n    local hookName=\"$1\";\n    shift;\n    local hooksSlice=\"${hookName%Hook}Hooks[@]\";\n    local hook ret=1;\n    for hook in \"_callImplicitHook 1 $hookName\" ${!hooksSlice+\"${!hooksSlice}\"};\n    do\n        if _eval \"$hook\" \"$@\"; then\n            ret=0;\n            break;\n        fi;\n    done;\n    return \"$ret\"\n",
    "showPhaseFooter":" \n    local phase=\"$1\";\n    local startTime=\"$2\";\n    local endTime=\"$3\";\n    local delta=$(( endTime - startTime ));\n    (( $delta < 30 )) && return;\n    local H=$((delta/3600));\n    local M=$((delta%3600/60));\n    local S=$((delta%60));\n    echo -n \"$phase completed in \";\n    (( $H > 0 )) && echo -n \"$H hours \";\n    (( $M > 0 )) && echo -n \"$M minutes \";\n    echo \"$S seconds\"\n",
    "showPhaseHeader":" \n    local phase=\"$1\";\n    case \"$phase\" in \n        unpackPhase)\n            header \"unpacking sources\"\n        ;;\n        patchPhase)\n            header \"patching sources\"\n        ;;\n        configurePhase)\n            header \"configuring\"\n        ;;\n        buildPhase)\n            header \"building\"\n        ;;\n        checkPhase)\n            header \"running tests\"\n        ;;\n        installPhase)\n            header \"installing\"\n        ;;\n        fixupPhase)\n            header \"post-installation fixup\"\n        ;;\n        installCheckPhase)\n            header \"running install tests\"\n        ;;\n        *)\n            header \"$phase\"\n        ;;\n    esac\n",
    "stopNest":" \n    true\n",
    "stripDirs":" \n    local cmd=\"$1\";\n    local ranlibCmd=\"$2\";\n    local paths=\"$3\";\n    local stripFlags=\"$4\";\n    local pathsNew=;\n    local p;\n    for p in ${paths};\n    do\n        if [ -e \"$prefix/$p\" ]; then\n            pathsNew=\"${pathsNew} $prefix/$p\";\n        fi;\n    done;\n    paths=${pathsNew};\n    if [ -n \"${paths}\" ]; then\n        echo \"stripping (with command $cmd and flags $stripFlags) in $paths\";\n        find $paths -type f -a '!' -wholename \"$prefix/lib/debug/*\" -exec $cmd $stripFlags '{}' \\; 2> /dev/null;\n        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \\; 2> /dev/null;\n    fi\n",
    "stripHash":" \n    local strippedName casematchOpt=0;\n    strippedName=\"$(basename -- \"$1\")\";\n    shopt -q nocasematch && casematchOpt=1;\n    shopt -u nocasematch;\n    if [[ \"$strippedName\" =~ ^[a-z0-9]{32}- ]]; then\n        echo \"${strippedName:33}\";\n    else\n        echo \"$strippedName\";\n    fi;\n    if (( casematchOpt )); then\n        shopt -s nocasematch;\n    fi\n",
    "substitute":" \n    local input=\"$1\";\n    local output=\"$2\";\n    shift 2;\n    if [ ! -f \"$input\" ]; then\n        echo \"substitute(): ERROR: file '$input' does not exist\" 1>&2;\n        return 1;\n    fi;\n    local content;\n    consumeEntire content < \"$input\";\n    if [ -e \"$output\" ]; then\n        chmod +w \"$output\";\n    fi;\n    substituteStream content \"file '$input'\" \"$@\" > \"$output\"\n",
    "substituteAll":" \n    local input=\"$1\";\n    local output=\"$2\";\n    local -a args=();\n    _allFlags;\n    substitute \"$input\" \"$output\" \"${args[@]}\"\n",
    "substituteAllInPlace":" \n    local fileName=\"$1\";\n    shift;\n    substituteAll \"$fileName\" \"$fileName\" \"$@\"\n",
    "substituteAllStream":" \n    local -a args=();\n    _allFlags;\n    substituteStream \"$1\" \"$2\" \"${args[@]}\"\n",
    "substituteInPlace":" \n    local -a fileNames=();\n    for arg in \"$@\";\n    do\n        if [[ \"$arg\" = \"--\"* ]]; then\n            break;\n        fi;\n        fileNames+=(\"$arg\");\n        shift;\n    done;\n    for file in \"${fileNames[@]}\";\n    do\n        substitute \"$file\" \"$file\" \"$@\";\n    done\n",
    "substituteStream":" \n    local var=$1;\n    local description=$2;\n    shift 2;\n    while (( \"$#\" )); do\n        case \"$1\" in \n            --replace)\n                pattern=\"$2\";\n                replacement=\"$3\";\n                shift 3;\n                local savedvar;\n                savedvar=\"${!var}\";\n                eval \"$var\"'=${'\"$var\"'//\"$pattern\"/\"$replacement\"}';\n                if [ \"$pattern\" != \"$replacement\" ]; then\n                    if [ \"${!var}\" == \"$savedvar\" ]; then\n                        echo \"substituteStream(): WARNING: pattern '$pattern' doesn't match anything in $description\" 1>&2;\n                    fi;\n                fi\n            ;;\n            --subst-var)\n                local varName=\"$2\";\n                shift 2;\n                if ! [[ \"$varName\" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then\n                    echo \"substituteStream(): ERROR: substitution variables must be valid Bash names, \\\"$varName\\\" isn't.\" 1>&2;\n                    return 1;\n                fi;\n                if [ -z ${!varName+x} ]; then\n                    echo \"substituteStream(): ERROR: variable \\$$varName is unset\" 1>&2;\n                    return 1;\n                fi;\n                pattern=\"@$varName@\";\n                replacement=\"${!varName}\";\n                eval \"$var\"'=${'\"$var\"'//\"$pattern\"/\"$replacement\"}'\n            ;;\n            --subst-var-by)\n                pattern=\"@$2@\";\n                replacement=\"$3\";\n                eval \"$var\"'=${'\"$var\"'//\"$pattern\"/\"$replacement\"}';\n                shift 3\n            ;;\n            *)\n                echo \"substituteStream(): ERROR: Invalid command line argument: $1\" 1>&2;\n                return 1\n            ;;\n        esac;\n    done;\n    printf \"%s\" \"${!var}\"\n",
    "sysconfigdataHook":" \n    if [ \"$1\" = '/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5' ]; then\n        export _PYTHON_HOST_PLATFORM='linux-x86_64';\n        export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_x86_64-linux-gnu';\n    fi\n",
    "toPythonPath":" \n    local paths=\"$1\";\n    local result=;\n    for i in $paths;\n    do\n        p=\"$i/lib/python3.11/site-packages\";\n        result=\"${result}${result:+:}$p\";\n    done;\n    echo $result\n",
    "unpackFile":" \n    curSrc=\"$1\";\n    header \"unpacking source archive $curSrc\" 3;\n    if ! runOneHook unpackCmd \"$curSrc\"; then\n        echo \"do not know how to unpack source archive $curSrc\";\n        exit 1;\n    fi\n",
    "unpackPhase":" \n    runHook preUnpack;\n    if [ -z \"${srcs:-}\" ]; then\n        if [ -z \"${src:-}\" ]; then\n            echo 'variable $src or $srcs should point to the source';\n            exit 1;\n        fi;\n        srcs=\"$src\";\n    fi;\n    local dirsBefore=\"\";\n    for i in *;\n    do\n        if [ -d \"$i\" ]; then\n            dirsBefore=\"$dirsBefore $i \";\n        fi;\n    done;\n    for i in $srcs;\n    do\n        unpackFile \"$i\";\n    done;\n    : ${sourceRoot=};\n    if [ -n \"${setSourceRoot:-}\" ]; then\n        runOneHook setSourceRoot;\n    else\n        if [ -z \"$sourceRoot\" ]; then\n            for i in *;\n            do\n                if [ -d \"$i\" ]; then\n                    case $dirsBefore in \n                        *\\ $i\\ *)\n\n                        ;;\n                        *)\n                            if [ -n \"$sourceRoot\" ]; then\n                                echo \"unpacker produced multiple directories\";\n                                exit 1;\n                            fi;\n                            sourceRoot=\"$i\"\n                        ;;\n                    esac;\n                fi;\n            done;\n        fi;\n    fi;\n    if [ -z \"$sourceRoot\" ]; then\n        echo \"unpacker appears to have produced no directories\";\n        exit 1;\n    fi;\n    echo \"source root is $sourceRoot\";\n    if [ \"${dontMakeSourcesWritable:-0}\" != 1 ]; then\n        chmod -R u+w -- \"$sourceRoot\";\n    fi;\n    runHook postUnpack\n",
    "updateSourceDateEpoch":" \n    local path=\"$1\";\n    local -a res=($(find \"$path\" -type f -not -newer \"$NIX_BUILD_TOP/..\" -printf '%T@ %p\\0'                     | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));\n    local time=\"${res[0]//\\.[0-9]*/}\";\n    local newestFile=\"${res[1]}\";\n    if [ \"${time:-0}\" -gt \"$SOURCE_DATE_EPOCH\" ]; then\n        echo \"setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile\";\n        export SOURCE_DATE_EPOCH=\"$time\";\n        local now=\"$(date +%s)\";\n        if [ \"$time\" -gt $((now - 60)) ]; then\n            echo \"warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic\";\n        fi;\n    fi\n"
  },
  "variables": {
    "AR": {"type": "exported", "value": "ar"},
    "AS": {"type": "exported", "value": "as"},
    "BASH": {"type": "var", "value": "/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin/bash"},
    "BASHOPTS": {"type": "unknown"},
    "BASHPID": {"type": "unknown"},
    "CABAL_CONFIG": {"type": "exported", "value": "/nix/store/fhy4c2wsgh9i2rvq8vylwp8wq3llnfji-ghc-shell-for-plutarch-template-config/cabal.config"},
    "CC": {"type": "exported", "value": "gcc"},
    "CONFIG_SHELL": {"type": "exported", "value": "/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin/bash"},
    "CXX": {"type": "exported", "value": "g++"},
    "DETERMINISTIC_BUILD": {"type": "exported", "value": "1"},
    "HOME": {"type": "exported", "value": "/homeless-shelter"},
    "HOSTTYPE": {"type": "var", "value": "x86_64"},
    "HOST_PATH": {"type": "exported", "value": "/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507/bin:/nix/store/axr1pjba64p3afs2frkhb1ym2p20pid1-ncurses-6.3-p20220507-dev/bin:/nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/bin:/nix/store/n95s7s6ilkjc7xwqml93acxzj6k0hsfn-coreutils-9.1/bin:/nix/store/k0kpf3r2k1d8p9h0gmx23msw3qrybkfk-findutils-4.9.0/bin:/nix/store/jay2imyql1mljkck4g3dnbnak6sd5ks6-diffutils-3.8/bin:/nix/store/5mgbisml783jj5mscxjsr4hlbmn25cyr-gnused-4.8/bin:/nix/store/ix6nn9lwp2w04agkfb1wzwvcnis0mmxw-gnugrep-3.7/bin:/nix/store/mdvw541sarkk8jxfrf9jyjz1gs46wyjn-gawk-5.1.1/bin:/nix/store/f4ja1s5wxs2fxvcyz6kaaqj75icjfrrm-gnutar-1.34/bin:/nix/store/nc3xqj1cq6h418qmqlha193mvmbhx4bp-gzip-1.12/bin:/nix/store/shkayl138d07l29bph4f92x3hwbqlk0j-bzip2-1.0.8-bin/bin:/nix/store/0yw0w4ds9q34c1j7ghrg21gaj415dlym-gnumake-4.3/bin:/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin:/nix/store/541ykirikh68a1djyk5cz7w21f896hj3-patch-2.7.6/bin:/nix/store/q4m8mhkb71yd7vgx5wmm5c7hzs7hsj45-xz-5.2.6-bin/bin:/nix/store/sd2s5syapsykjy5xdkx6407cx1bv9wpn-file-5.42/bin"},
    "IFS": {"type": "var", "value": " \t\n"},
    "IN_NIX_SHELL": {"type": "exported", "value": "impure"},
    "LD": {"type": "exported", "value": "ld"},
    "LINENO": {"type": "var", "value": "76"},
    "MACHTYPE": {"type": "var", "value": "x86_64-pc-linux-gnu"},
    "NIX_BINTOOLS": {"type": "exported", "value": "/nix/store/bxays0cw5nr88fmyr90y0kkwkji9vk1q-binutils-wrapper-2.38"},
    "NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu": {"type": "exported", "value": "1"},
    "NIX_BUILD_CORES": {"type": "exported", "value": "4"},
    "NIX_BUILD_TOP": {"type": "exported", "value": "/build"},
    "NIX_CC": {"type": "exported", "value": "/nix/store/k6yka69n28j47wjhm14h41r2kbv262y6-gcc-wrapper-11.3.0"},
    "NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu": {"type": "exported", "value": "1"},
    "NIX_CFLAGS_COMPILE": {"type": "exported", "value": " -frandom-seed=ddibj74dig -isystem /nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/include -isystem /nix/store/axr1pjba64p3afs2frkhb1ym2p20pid1-ncurses-6.3-p20220507-dev/include -isystem /nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/include -isystem /nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/include -isystem /nix/store/axr1pjba64p3afs2frkhb1ym2p20pid1-ncurses-6.3-p20220507-dev/include -isystem /nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/include"},
    "NIX_ENFORCE_NO_NATIVE": {"type": "exported", "value": "1"},
    "NIX_ENFORCE_PURITY": {"type": "exported", "value": "1"},
    "NIX_GHC_LIBDIR": {"type": "exported", "value": "/nix/store/kgxgivbi4sr9ayynasxfxpk2q18gav80-ghc-shell-for-plutarch-template-ghc-9.2.5-env/lib/ghc-9.2.5"},
    "NIX_HARDENING_ENABLE": {"type": "exported", "value": "fortify stackprotector pic strictoverflow format relro bindnow"},
    "NIX_INDENT_MAKE": {"type": "exported", "value": "1"},
    "NIX_LDFLAGS": {"type": "exported", "value": "-rpath /nix/store/ddibj74digdcrvf7rs8x22y0hm4km8fg-ghc-shell-for-plutarch-template-env/lib64 -rpath /nix/store/ddibj74digdcrvf7rs8x22y0hm4km8fg-ghc-shell-for-plutarch-template-env/lib  -L/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/lib -L/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507/lib -L/nix/store/6fncvg61gwjh1j7syy0nyki2j6xxf2ql-libffi-3.4.2/lib -L/nix/store/i96w3nijv65d78zx4bqma48ww51fx8is-gmp-with-cxx-6.2.1/lib -L/nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/lib -L/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/lib -L/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507/lib -L/nix/store/6fncvg61gwjh1j7syy0nyki2j6xxf2ql-libffi-3.4.2/lib -L/nix/store/i96w3nijv65d78zx4bqma48ww51fx8is-gmp-with-cxx-6.2.1/lib -L/nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/lib"},
    "NIX_LIB64_IN_SELF_RPATH": {"type": "var", "value": "1"},
    "NIX_LOG_FD": {"type": "exported", "value": "2"},
    "NIX_NO_SELF_RPATH": {"type": "var", "value": "1"},
    "NIX_STORE": {"type": "exported", "value": "/nix/store"},
    "NM": {"type": "exported", "value": "nm"},
    "OBJCOPY": {"type": "exported", "value": "objcopy"},
    "OBJDUMP": {"type": "exported", "value": "objdump"},
    "OLDPWD": {"type": "exported", "value": ""},
    "OPTERR": {"type": "var", "value": "1"},
    "OPTIND": {"type": "unknown"},
    "OSTYPE": {"type": "var", "value": "linux-gnu"},
    "PATH": {"type": "exported", "value": "/nix/store/kgxgivbi4sr9ayynasxfxpk2q18gav80-ghc-shell-for-plutarch-template-ghc-9.2.5-env/bin:/nix/store/n9lgmvckhnzl7h008nz44ggjz9dy5303-cabal-install-3.10.1.0/bin:/nix/store/zq4bkyl5nyhjzix25h3krgip2dc90jdh-cabal-fmt-0.1.5.1/bin:/nix/store/ji1rgrdfjr6lv16pvjcjxkyl0l9jw70s-fourmolu-0.14.0.0/bin:/nix/store/dps3ryh9wg6j1h8xpm2n370smazvr30w-nixpkgs-fmt-1.3.0/bin:/nix/store/cm8jq8fi9j86q8axfhhydxkzrrwwplkr-hasktags-0.72.0/bin:/nix/store/6fr35vv2g25invmk38w8k34jq8jakqip-fd-8.7.1/bin:/nix/store/35v296ikxm59xyb0srr4awfl30cl2d3i-entr-5.4/bin:/nix/store/gy82fsz47q96hfwfj5viw9pbxmrpinv5-apply-refact-0.10.0.0/bin:/nix/store/800hpk021xvaqlgdqbdp5p4nj2m8y85r-ghc-9.2.4/bin:/nix/store/9b53cp017lrbc4czss59s52j80hp7kih-commitizen-3.12.0/bin:/nix/store/1ljzhl5vnr7bynm06h8nay38lbjd6937-python3.11-argcomplete-3.1.2/bin:/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/bin:/nix/store/yb096fjkaksxshx215m2bw6xvpxby834-python3.11-charset-normalizer-3.2.0/bin:/nix/store/zvidxcjzvqj5y77qczrk5yr2g25s4nx4-python3.11-babel-2.12.1/bin:/nix/store/gc073r8hy6iqsxyxil8c8pjy7lnfzz4g-haskell-language-server-exe-haskell-language-server-1.8.0.0/bin:/nix/store/x06rqrpzygpr7637zbpd4qbw0wbdj4x2-hlint-exe-hlint-3.5/bin:/nix/store/f1yk9kbnv0zikz64hn9hx218d04jq73l-patchelf-0.15.0/bin:/nix/store/k6yka69n28j47wjhm14h41r2kbv262y6-gcc-wrapper-11.3.0/bin:/nix/store/l4dvshb0bw0ipyx17f6rknzk83mdx81y-gcc-11.3.0/bin:/nix/store/jqb18w342wz9sc9jlc8blq80ms44pak3-glibc-2.35-163-bin/bin:/nix/store/n95s7s6ilkjc7xwqml93acxzj6k0hsfn-coreutils-9.1/bin:/nix/store/bxays0cw5nr88fmyr90y0kkwkji9vk1q-binutils-wrapper-2.38/bin:/nix/store/jfkmqz20q8fsaqizcml86adxqyzlwllx-binutils-2.38/bin:/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507/bin:/nix/store/axr1pjba64p3afs2frkhb1ym2p20pid1-ncurses-6.3-p20220507-dev/bin:/nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14/bin:/nix/store/n95s7s6ilkjc7xwqml93acxzj6k0hsfn-coreutils-9.1/bin:/nix/store/k0kpf3r2k1d8p9h0gmx23msw3qrybkfk-findutils-4.9.0/bin:/nix/store/jay2imyql1mljkck4g3dnbnak6sd5ks6-diffutils-3.8/bin:/nix/store/5mgbisml783jj5mscxjsr4hlbmn25cyr-gnused-4.8/bin:/nix/store/ix6nn9lwp2w04agkfb1wzwvcnis0mmxw-gnugrep-3.7/bin:/nix/store/mdvw541sarkk8jxfrf9jyjz1gs46wyjn-gawk-5.1.1/bin:/nix/store/f4ja1s5wxs2fxvcyz6kaaqj75icjfrrm-gnutar-1.34/bin:/nix/store/nc3xqj1cq6h418qmqlha193mvmbhx4bp-gzip-1.12/bin:/nix/store/shkayl138d07l29bph4f92x3hwbqlk0j-bzip2-1.0.8-bin/bin:/nix/store/0yw0w4ds9q34c1j7ghrg21gaj415dlym-gnumake-4.3/bin:/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin:/nix/store/541ykirikh68a1djyk5cz7w21f896hj3-patch-2.7.6/bin:/nix/store/q4m8mhkb71yd7vgx5wmm5c7hzs7hsj45-xz-5.2.6-bin/bin:/nix/store/sd2s5syapsykjy5xdkx6407cx1bv9wpn-file-5.42/bin"},
    "PS4": {"type": "var", "value": "+ "},
    "PYTHONHASHSEED": {"type": "exported", "value": "0"},
    "PYTHONNOUSERSITE": {"type": "exported", "value": "1"},
    "PYTHONPATH": {"type": "exported", "value": "/nix/store/9b53cp017lrbc4czss59s52j80hp7kih-commitizen-3.12.0/lib/python3.11/site-packages:/nix/store/1ljzhl5vnr7bynm06h8nay38lbjd6937-python3.11-argcomplete-3.1.2/lib/python3.11/site-packages:/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/lib/python3.11/site-packages:/nix/store/yb096fjkaksxshx215m2bw6xvpxby834-python3.11-charset-normalizer-3.2.0/lib/python3.11/site-packages:/nix/store/3xhm5phgl4bzflns8m6p1ndlnzm4pxjy-python3.11-colorama-0.4.6/lib/python3.11/site-packages:/nix/store/7v07diivci3zhnd213cifw25454xbv0q-python3.11-decli-0.6.1/lib/python3.11/site-packages:/nix/store/lr2215vaw8c99i4hhrm5xg9fqw47vb2d-python3.11-importlib-metadata-6.8.0/lib/python3.11/site-packages:/nix/store/xnk7c84b4n6k8h3sxlw0m7h086z0wdc9-python3.11-toml-0.10.2/lib/python3.11/site-packages:/nix/store/73mygpxxl95cxk82m64iy1hrdlgg32zc-python3.11-zipp-3.16.2/lib/python3.11/site-packages:/nix/store/xywcy1bid6gvympqkyjk4q42b0yw0q4d-python3.11-Jinja2-3.1.2/lib/python3.11/site-packages:/nix/store/zvidxcjzvqj5y77qczrk5yr2g25s4nx4-python3.11-babel-2.12.1/lib/python3.11/site-packages:/nix/store/i3kgyd1j05y5y2xhnrzw0f73741kss8w-python3.11-markupsafe-2.1.3/lib/python3.11/site-packages:/nix/store/pzbnig8ba78nav1xzg25s9qqv7q21sa4-python3.11-packaging-23.1/lib/python3.11/site-packages:/nix/store/ix3462njsm5rgpz3f1l52ns0dpwhdkbm-python3.11-pyyaml-6.0.1/lib/python3.11/site-packages:/nix/store/i1nnln8yg63dj5fjvcycn97d4cpwj8cf-python3.11-questionary-2.0.1/lib/python3.11/site-packages:/nix/store/mam3m9qrs2lby2m3w8lsb1fnahvlf8fh-python3.11-prompt-toolkit-3.0.39/lib/python3.11/site-packages:/nix/store/pmgn71inl5yfmlxj5hv6ykq15zdrxvna-python3.11-six-1.16.0/lib/python3.11/site-packages:/nix/store/jsdqajihisa9rsywb5f0gfgj91da2fxl-python3.11-wcwidth-0.2.6/lib/python3.11/site-packages:/nix/store/c2g2jfc4bxk447qh1ddljdw17nwmn4kg-python3.11-setuptools-68.2.2/lib/python3.11/site-packages:/nix/store/xqc71xl183xkzqhs9ifmzhyr0k6bmq7p-python3.11-termcolor-2.3.0/lib/python3.11/site-packages:/nix/store/m63ikv2cijmksvfypjqi9dya2y19rnhf-python3.11-tomlkit-0.12.1/lib/python3.11/site-packages"},
    "RANLIB": {"type": "exported", "value": "ranlib"},
    "READELF": {"type": "exported", "value": "readelf"},
    "SHELL": {"type": "exported", "value": "/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin/bash"},
    "SHELLOPTS": {"type": "unknown"},
    "SIZE": {"type": "exported", "value": "size"},
    "SOURCE_DATE_EPOCH": {"type": "exported", "value": "315532800"},
    "SRANDOM": {"type": "unknown"},
    "STRINGS": {"type": "exported", "value": "strings"},
    "STRIP": {"type": "exported", "value": "strip"},
    "TEMP": {"type": "exported", "value": "/build"},
    "TEMPDIR": {"type": "exported", "value": "/build"},
    "TERM": {"type": "exported", "value": "xterm-256color"},
    "TMP": {"type": "exported", "value": "/build"},
    "TMPDIR": {"type": "exported", "value": "/build"},
    "TZ": {"type": "exported", "value": "UTC"},
    "XDG_DATA_DIRS": {"type": "exported", "value": "/nix/store/kgxgivbi4sr9ayynasxfxpk2q18gav80-ghc-shell-for-plutarch-template-ghc-9.2.5-env/share:/nix/store/n9lgmvckhnzl7h008nz44ggjz9dy5303-cabal-install-3.10.1.0/share:/nix/store/zq4bkyl5nyhjzix25h3krgip2dc90jdh-cabal-fmt-0.1.5.1/share:/nix/store/bmyi0mn1ryj975q8y4hi97f9ylakacp4-attoparsec-0.14.4/share:/nix/store/6fr35vv2g25invmk38w8k34jq8jakqip-fd-8.7.1/share:/nix/store/35v296ikxm59xyb0srr4awfl30cl2d3i-entr-5.4/share:/nix/store/800hpk021xvaqlgdqbdp5p4nj2m8y85r-ghc-9.2.4/share:/nix/store/hjksfpjch0gjb624nkiin9xfdb3mksv5-fail-4.9.0.0/share:/nix/store/9b53cp017lrbc4czss59s52j80hp7kih-commitizen-3.12.0/share:/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5/share:/nix/store/f1yk9kbnv0zikz64hn9hx218d04jq73l-patchelf-0.15.0/share"},
    "_PYTHON_HOST_PLATFORM": {"type": "exported", "value": "linux-x86_64"},
    "_PYTHON_SYSCONFIGDATA_NAME": {"type": "exported", "value": "_sysconfigdata__linux_x86_64-linux-gnu"},
    "buildInputs": {"type": "exported", "value": "/nix/store/dj8fls24vlcmlp4vl77pzslniz8a40fm-aeson-lib-aeson-2.1.1.0 /nix/store/y9vj0z3610hp1g6hh6zv06h6m1gy12wv-aeson-pretty-lib-aeson-pretty-0.8.9 /nix/store/7y8p3i7sf4p6mkf52kfs6p57x230j98k-base16-bytestring-lib-base16-bytestring-1.0.2.0 /nix/store/fc4lcdy27qc8a90sccw03dlg7jh205zi-cardano-binary-lib-cardano-binary-1.5.0.0.0.0.0.2 /nix/store/rmm9lg0ra3f5884baizi2q4x0r3gia4m-cborg-lib-cborg-0.2.8.0 /nix/store/vf94mxzs7xi501cj4rbmzaj6b512vh39-data-default-lib-data-default-0.7.1.1 /nix/store/qrxdl47dzyfb1if3hgdirjbz2f3cn2f8-liqwid-plutarch-extra-lib-liqwid-plutarch-extra-3.21.1 /nix/store/k6778xs2f8akraq9mbmrdyx4mcazy0fa-liqwid-script-export-lib-liqwid-script-export-2.3.0 /nix/store/gc7nh1gqlszz4k0dkbvsk7ln9vxp45v2-plutarch-extra-lib-plutarch-extra-1.2.0 /nix/store/fwlzhlsr44kf19z7i9zwzf1b57a9vap5-plutarch-lib-plutarch-1.3.0 /nix/store/4q1hz3ln5xvfbzk8f1vg09shm82my2bk-plutus-core-lib-plutus-core-1.0.0.0.0.0.0.0.1 /nix/store/wj3a69j3qdp44407d531ypxxjc0pf4p0-plutus-ledger-api-lib-plutus-ledger-api-1.0.0.0.0.0.0.0.1 /nix/store/rfc3cbrf7gf9zwbgrg7x2d1gl89gpyqm-plutus-tx-lib-plutus-tx-1.0.0.0.0.0.0.0.1 /nix/store/y82v71wf72azwq84hh81vl9q8daqcxlq-ply-core-lib-ply-core-0.4.0 /nix/store/xvryfpyn61ha3fbybarq7130xr5n9k6z-ply-plutarch-lib-ply-plutarch-0.4.0 /nix/store/akmf98rp3aiids39789pf027wvq6qrrw-serialise-lib-serialise-0.2.6.0"},
    "buildPhase": {"type": "exported", "value": "echo \"------------------------------------------------------------\" >>$out\necho \" WARNING: the existence of this path is not guaranteed.\" >>$out\necho \" It is an internal implementation detail for pkgs.mkShell.\"   >>$out\necho \"------------------------------------------------------------\" >>$out\necho >> $out\n# Record all build inputs as runtime dependencies\nexport >> $out\n"},
    "builder": {"type": "exported", "value": "/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin/bash"},
    "cmakeFlags": {"type": "exported", "value": ""},
    "configureFlags": {"type": "exported", "value": ""},
    "defaultBuildInputs": {"type": "var", "value": ""},
    "defaultNativeBuildInputs": {"type": "var", "value": "/nix/store/f1yk9kbnv0zikz64hn9hx218d04jq73l-patchelf-0.15.0 /nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh /nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh /nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh /nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh /nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds.sh /nix/store/k6yka69n28j47wjhm14h41r2kbv262y6-gcc-wrapper-11.3.0"},
    "depsBuildBuild": {"type": "exported", "value": ""},
    "depsBuildBuildPropagated": {"type": "exported", "value": ""},
    "depsBuildTarget": {"type": "exported", "value": ""},
    "depsBuildTargetPropagated": {"type": "exported", "value": ""},
    "depsHostHost": {"type": "exported", "value": ""},
    "depsHostHostPropagated": {"type": "exported", "value": ""},
    "depsTargetTarget": {"type": "exported", "value": ""},
    "depsTargetTargetPropagated": {"type": "exported", "value": ""},
    "doCheck": {"type": "exported", "value": ""},
    "doInstallCheck": {"type": "exported", "value": ""},
    "dontAddDisableDepTrack": {"type": "exported", "value": "1"},
    "enableDWARF": {"type": "exported", "value": ""},
    "envBuildBuildHooks": {"type": "array", "value": ["addPythonPath" , "sysconfigdataHook" ]},
    "envBuildHostHooks": {"type": "array", "value": ["addPythonPath" , "sysconfigdataHook" ]},
    "envBuildTargetHooks": {"type": "array", "value": ["addPythonPath" , "sysconfigdataHook" ]},
    "envHostHostHooks": {"type": "array", "value": ["ccWrapper_addCVars" , "bintoolsWrapper_addLDVars" ]},
    "envHostTargetHooks": {"type": "array", "value": ["ccWrapper_addCVars" , "bintoolsWrapper_addLDVars" ]},
    "envTargetTargetHooks": {"type": "array", "value": []},
    "exactDeps": {"type": "exported", "value": "1"},
    "fixupOutputHooks": {"type": "array", "value": ["if [ -z \"${dontPatchELF-}\" ]; then patchELF \"$prefix\"; fi" , "_makeSymlinksRelative" , "if [ -z \"${dontGzipMan-}\" ]; then compressManPages \"$prefix\"; fi" , "_doStrip" , "patchShebangsAuto" , "_pruneLibtoolFiles" , "if [[ -z \"${noAuditTmpdir-}\" && -e \"$prefix\" ]]; then auditTmpdir \"$prefix\"; fi" , "_moveSystemdUserUnits" , "_moveSbin" , "_moveLib64" ]},
    "initialPath": {"type": "var", "value": "/nix/store/n95s7s6ilkjc7xwqml93acxzj6k0hsfn-coreutils-9.1 /nix/store/k0kpf3r2k1d8p9h0gmx23msw3qrybkfk-findutils-4.9.0 /nix/store/jay2imyql1mljkck4g3dnbnak6sd5ks6-diffutils-3.8 /nix/store/5mgbisml783jj5mscxjsr4hlbmn25cyr-gnused-4.8 /nix/store/ix6nn9lwp2w04agkfb1wzwvcnis0mmxw-gnugrep-3.7 /nix/store/mdvw541sarkk8jxfrf9jyjz1gs46wyjn-gawk-5.1.1 /nix/store/f4ja1s5wxs2fxvcyz6kaaqj75icjfrrm-gnutar-1.34 /nix/store/nc3xqj1cq6h418qmqlha193mvmbhx4bp-gzip-1.12 /nix/store/shkayl138d07l29bph4f92x3hwbqlk0j-bzip2-1.0.8-bin /nix/store/0yw0w4ds9q34c1j7ghrg21gaj415dlym-gnumake-4.3 /nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16 /nix/store/541ykirikh68a1djyk5cz7w21f896hj3-patch-2.7.6 /nix/store/q4m8mhkb71yd7vgx5wmm5c7hzs7hsj45-xz-5.2.6-bin /nix/store/sd2s5syapsykjy5xdkx6407cx1bv9wpn-file-5.42"},
    "installPhase": {"type": "exported", "value": "echo \"Shell for plutarch-template\"\necho $nativeBuildInputs $buildInputs > $out\n"},
    "mesonFlags": {"type": "exported", "value": ""},
    "name": {"type": "exported", "value": "ghc-shell-for-plutarch-template"},
    "nativeBuildInputs": {"type": "exported", "value": "/nix/store/kgxgivbi4sr9ayynasxfxpk2q18gav80-ghc-shell-for-plutarch-template-ghc-9.2.5-env /nix/store/n9lgmvckhnzl7h008nz44ggjz9dy5303-cabal-install-3.10.1.0 /nix/store/zq4bkyl5nyhjzix25h3krgip2dc90jdh-cabal-fmt-0.1.5.1 /nix/store/ji1rgrdfjr6lv16pvjcjxkyl0l9jw70s-fourmolu-0.14.0.0 /nix/store/dps3ryh9wg6j1h8xpm2n370smazvr30w-nixpkgs-fmt-1.3.0 /nix/store/cm8jq8fi9j86q8axfhhydxkzrrwwplkr-hasktags-0.72.0 /nix/store/6fr35vv2g25invmk38w8k34jq8jakqip-fd-8.7.1 /nix/store/35v296ikxm59xyb0srr4awfl30cl2d3i-entr-5.4 /nix/store/gy82fsz47q96hfwfj5viw9pbxmrpinv5-apply-refact-0.10.0.0 /nix/store/9b53cp017lrbc4czss59s52j80hp7kih-commitizen-3.12.0 /nix/store/gc073r8hy6iqsxyxil8c8pjy7lnfzz4g-haskell-language-server-exe-haskell-language-server-1.8.0.0 /nix/store/x06rqrpzygpr7637zbpd4qbw0wbdj4x2-hlint-exe-hlint-3.5"},
    "out": {"type": "exported", "value": "/nix/store/ddibj74digdcrvf7rs8x22y0hm4km8fg-ghc-shell-for-plutarch-template-env"},
    "outputBin": {"type": "var", "value": "out"},
    "outputDev": {"type": "var", "value": "out"},
    "outputDevdoc": {"type": "var", "value": "REMOVE"},
    "outputDevman": {"type": "var", "value": "out"},
    "outputDoc": {"type": "var", "value": "out"},
    "outputInclude": {"type": "var", "value": "out"},
    "outputInfo": {"type": "var", "value": "out"},
    "outputLib": {"type": "var", "value": "out"},
    "outputMan": {"type": "var", "value": "out"},
    "outputs": {"type": "exported", "value": "out"},
    "packageSetupDeps": {"type": "exported", "value": "1"},
    "patches": {"type": "exported", "value": ""},
    "phases": {"type": "exported", "value": "installPhase"},
    "pkg": {"type": "var", "value": "/nix/store/k6yka69n28j47wjhm14h41r2kbv262y6-gcc-wrapper-11.3.0"},
    "pkgsBuildBuild": {"type": "array", "value": []},
    "pkgsBuildHost": {"type": "array", "value": ["/nix/store/kgxgivbi4sr9ayynasxfxpk2q18gav80-ghc-shell-for-plutarch-template-ghc-9.2.5-env" , "/nix/store/n9lgmvckhnzl7h008nz44ggjz9dy5303-cabal-install-3.10.1.0" , "/nix/store/zq4bkyl5nyhjzix25h3krgip2dc90jdh-cabal-fmt-0.1.5.1" , "/nix/store/ji1rgrdfjr6lv16pvjcjxkyl0l9jw70s-fourmolu-0.14.0.0" , "/nix/store/vkzsrzdivnihr6p0azavi0b0x2f1vign-aeson-2.1.2.1" , "/nix/store/bmyi0mn1ryj975q8y4hi97f9ylakacp4-attoparsec-0.14.4" , "/nix/store/4j3rjqgzid8vj1h2n10lxc1lbk2ly0pf-scientific-0.3.7.0" , "/nix/store/54cvkhnnn4c7aj6bwfsc469y6a6nn05x-hashable-1.4.3.0" , "/nix/store/943vygqys6scim7il387xixlj7gprnj0-integer-logarithms-1.0.3.1" , "/nix/store/dvbw53f3kh2297xq11ilkikpncvdvdqb-primitive-0.8.0.0" , "/nix/store/15m9wnay3qzljvcqx3a2ayaird3x10jj-base-compat-batteries-0.12.3" , "/nix/store/nw79ywg85f04i6gsf4lkplrgdz78dyk7-base-compat-0.12.3" , "/nix/store/ypdmdbf1crsp1da4magqyypx4n48akci-data-fix-0.3.2" , "/nix/store/y1jvn10zphn7aaxfcfna7xqjz379bhlx-dlist-1.0" , "/nix/store/a76ph21z5w1xg6gyb8jxaldx21chm76s-generically-0.1.1" , "/nix/store/p857pr42147mrcnlp52c527mc9g0fyc6-base-orphans-0.9.0" , "/nix/store/xm4a9cdik2hi1hcfb6xsm4a01hs6g54q-indexed-traversable-0.1.2.1" , "/nix/store/6vbbm53yaafj095z9wlkrdq4b816mkqx-OneTuple-0.4.1.1" , "/nix/store/pl36c0r0ypdj5fxrjqj2v1m9rvjzyvby-QuickCheck-2.14.3" , "/nix/store/w17xsfllzid762c9xxbhhrfbpfb664jl-random-1.2.1.1" , "/nix/store/9j48k9is2ny0zc49y4xyxc7h034qswh1-splitmix-0.1.0.4" , "/nix/store/9j48k9is2ny0zc49y4xyxc7h034qswh1-splitmix-0.1.0.4" , "/nix/store/cjjpb0ckryz71zgvgbg59iqzr9iyp58y-semialign-1.3" , "/nix/store/nj7k8pmzci622xbycias0sj03fry4y0y-indexed-traversable-instances-0.1.1.2" , "/nix/store/728amnlvpbdxmlvqj8r3gg8a1hpf86il-tagged-0.8.7" , "/nix/store/5ix6a6iryypk4fqivw1vb3fgxx19b1vc-unordered-containers-0.2.19.1" , "/nix/store/i38w5mf63dqifd43vdz8fkscwgg5nnf3-vector-0.13.0.0" , "/nix/store/7wizqn962z4ffp4cxs9rc1ibzhqlpbj3-vector-stream-0.1.0.0" , "/nix/store/wy5d6b91fk1bf8yd9sf23zmdmf4vkw8p-semigroupoids-5.3.7" , "/nix/store/1mig7dcmax2wd5rxkcdp927qn1iqpi7z-bifunctors-5.5.15" , "/nix/store/5myym2590pk0cxgghgzv9g1nx4xgrk9k-comonad-5.0.8" , "/nix/store/qz2v7l4z0lxz5nq9x3gv33wa3k8fphaw-distributive-0.6.2.1" , "/nix/store/5gg5x7kd512l74v3vvfxmrbk6vx70jk1-transformers-compat-0.7.2" , "/nix/store/sccrv9nkbq9q59h06bxa0rkiiag9j3xh-th-abstraction-0.4.5.0" , "/nix/store/3qf3b37r0b1nwk3rq5g89p0k9z2zwl57-contravariant-1.5.5" , "/nix/store/dxr2zihpla2llzpmk2fc4dg9fjx0pzhs-StateVar-1.2.2" , "/nix/store/y0kzfxxa28pk17iqp5fzlrrbsspasr37-these-1.2" , "/nix/store/72qs5sdqns6xvny2g75zf9dy0bf3477m-assoc-1.1" , "/nix/store/xy1h9l88rnacrqbmagbdmdljixjs5fli-foldable1-classes-compat-0.1" , "/nix/store/h1d5wn6g861f9a7a749pkzisrhp2m7f7-strict-0.5" , "/nix/store/ky9n5hah9mgqixrxgxh512z69296bdl9-text-short-0.1.5" , "/nix/store/xqabb8lfk7r921ncnnnj4pvy1bf5crqp-time-compat-1.9.6.1" , "/nix/store/y2wrc91gj5s2yg1vaj0jc1ijsaw8qvyb-uuid-types-1.0.5" , "/nix/store/f32n137s80nsn00c0np9fiby1pia5www-witherable-0.4.2" , "/nix/store/l83dxfp1a0666wilf9c163wajrwv0r14-ansi-terminal-0.11.5" , "/nix/store/gbkizy83v9ssh2af6rmzbsscnqms1m1j-ansi-terminal-types-0.11.5" , "/nix/store/va0x8878zx9vmlgyxii5nx6lqcyy7s0i-colour-2.3.6" , "/nix/store/va0x8878zx9vmlgyxii5nx6lqcyy7s0i-colour-2.3.6" , "/nix/store/rr313gnmsjk5hgjyxwavnxglmcbpxk97-Cabal-syntax-3.10.1.0" , "/nix/store/jj77spfvj1f53qwfynspl66nwagjs90j-Diff-0.4.1" , "/nix/store/yakzl63hzq4g6iq7y3x0s4wwf50q0430-file-embed-0.0.15.0" , "/nix/store/rncyrpp13r2dd0nmvyczzknrdhrksj9r-ghc-lib-parser-9.6.2.20230523" , "/nix/store/fvkxj5blzvn7f77bqfpbbr72c1vmlj60-megaparsec-9.3.1" , "/nix/store/5xi0nclj6l11gy7p9mxv05kfkiy3zmd5-case-insensitive-1.2.1.0" , "/nix/store/wfwgg19yc5bwwinxcbr1ridk3hczda2d-parser-combinators-1.3.0" , "/nix/store/wwlrm98d17dkv2vksmp6n6a7d4i5rnzv-MemoTrie-0.6.11" , "/nix/store/dl97h1d7y0j008x5m3b56hwbrq3412lp-newtype-generics-0.6.2" , "/nix/store/yvdvpm3fgl5zn2pqjfy3rpvwrgfbq2p9-syb-0.7.2.4" , "/nix/store/6z8sq4msbm44g5xrqddpmsnmpry8w0s8-yaml-0.11.11.2" , "/nix/store/6qhpnan1myaj7s7ynfs8bami30hiy493-conduit-1.3.5" , "/nix/store/3syzqxqyxv934fhga2j190l8pdz9s867-mono-traversable-1.0.15.3" , "/nix/store/kfb7czj7c4bkbv6p6xykrw49qf6yi9x9-split-0.2.3.5" , "/nix/store/z3ym5414zf0krl3mbbplpyxd0jd50ldw-vector-algorithms-0.9.0.1" , "/nix/store/ycndz8lkhvn20s7z28fxqy4fc8kjs7fq-bitvec-1.1.5.0" , "/nix/store/y941q12ghf38gd4zh62nlph0qj1mh68s-resourcet-1.2.6" , "/nix/store/rxaapaygcb99dx67x4pmpjg7xd5avg91-unliftio-core-0.2.1.0" , "/nix/store/rxaapaygcb99dx67x4pmpjg7xd5avg91-unliftio-core-0.2.1.0" , "/nix/store/ipn0bg3f1v2l1mqa5sii4164jz31cr75-libyaml-0.1.2" , "/nix/store/0mnkd28mvqbqwwm6zd31r8ly6shwbm84-optparse-applicative-0.17.1.0" , "/nix/store/rm3xchpa6dsxaikfqlmb7a7xaypihhf2-ansi-wl-pprint-0.6.9" , "/nix/store/gjiryabkmqirww63rg2vnp3f703vvs0g-th-env-0.1.1" , "/nix/store/jnmbyz665573p4mlic3wb1757bv4sqwj-th-compat-0.1.4" , "/nix/store/dps3ryh9wg6j1h8xpm2n370smazvr30w-nixpkgs-fmt-1.3.0" , "/nix/store/cm8jq8fi9j86q8axfhhydxkzrrwwplkr-hasktags-0.72.0" , "/nix/store/1631zin0pgq3iqbz2h149maklz6c5r9p-json-0.10" , "/nix/store/2d9rq6qqsn95ifagf439hpk7bxj55hb4-syb-0.7.2.1" , "/nix/store/bbwxa3y1invn520lcikipskf879xwhbq-microlens-platform-0.4.2.1" , "/nix/store/j0bk4c3m2qcn0956cfy4wagxmaa2zizr-hashable-1.4.1.0" , "/nix/store/l5cm22vvj0nkdrb86xz10v1qcvzyp8w9-base-orphans-0.8.7" , "/nix/store/c4vxmnqn0biaw7niaim2y1n650j24lny-microlens-0.4.12.0" , "/nix/store/j78yhnn5589zfn9l4slspja9jmxs3bad-microlens-ghc-0.4.13.2" , "/nix/store/ky4fjym9b3aahb3889kv5cih484nbmj1-microlens-mtl-0.2.0.2" , "/nix/store/ck2x0pd9c40ivw4wcmkkkib5wgb720jx-transformers-compat-0.6.6" , "/nix/store/vcbxh69pw0dmgyxn94q76snfmzyvrgj2-microlens-th-0.4.3.10" , "/nix/store/5vrj4x9his0d995i0chaijriwb55mvi0-th-abstraction-0.4.4.0" , "/nix/store/pn9zc6wbw9gmhdss0rbnn8v44cv3lvq0-unordered-containers-0.2.17.0" , "/nix/store/blfpjb5hz4drb5c8k07w5ni381689fwg-vector-0.12.3.1" , "/nix/store/8nz85f2p0h0i0lils24m89s18rj2d8b6-primitive-0.7.3.0" , "/nix/store/qq0whp01p8ffawrhrl0g0gcn0sqfyj7r-utf8-string-1.0.2" , "/nix/store/02q4b2ix3p2fqva869saf36s7b1g5j0k-optparse-applicative-0.16.1.0" , "/nix/store/7avkfhbld3b624vxgsx04mq51jhywfl0-ansi-wl-pprint-0.6.9" , "/nix/store/0bbs65q68mww8r6w77cfxyh5gv95a5pc-ansi-terminal-0.11.3" , "/nix/store/wdlxb6jiqw9ipm6n58j6ac3d7rzwrpc6-colour-2.3.6" , "/nix/store/6fr35vv2g25invmk38w8k34jq8jakqip-fd-8.7.1" , "/nix/store/35v296ikxm59xyb0srr4awfl30cl2d3i-entr-5.4" , "/nix/store/gy82fsz47q96hfwfj5viw9pbxmrpinv5-apply-refact-0.10.0.0" , "/nix/store/ipibi8056bpk2y5rfldc8ffafk2yssam-extra-1.7.12" , "/nix/store/m54wsyqch2ylppi6i6ach96sx2d4qpzi-clock-0.8.3" , "/nix/store/9i9zldzc6g5xrhsrf0lqyan8jq7az4kw-filemanip-0.3.6.3" , "/nix/store/zs88qwc2kf72jsa1qd9w54v84517f9bi-unix-compat-0.5.4" , "/nix/store/800hpk021xvaqlgdqbdp5p4nj2m8y85r-ghc-9.2.4" , "/nix/store/4xw3yljbw7r8d4rpnd6phi7ibdkirdzf-ghc-exactprint-1.5.0" , "/nix/store/hjksfpjch0gjb624nkiin9xfdb3mksv5-fail-4.9.0.0" , "/nix/store/33wcm2wi57cfq3l33g58dy16zhkrr195-ordered-containers-0.2.2" , "/nix/store/y34yg0ihzfl7wrcql5rq4nicj7q2sw1y-data-default-0.7.1.1" , "/nix/store/hf9dq8b6kjsi3xnx1a2wzd2k7f4qh8mw-data-default-class-0.1.2.0" , "/nix/store/sf0i7c3vad0w0apphql382gjs3mc2q66-data-default-instances-containers-0.0.1" , "/nix/store/h19y7k3qn927ra5n9z4hrii32dnqdshs-data-default-instances-dlist-0.0.1" , "/nix/store/c622k45m9kdxwl30fhla1lny4siq8hgm-dlist-1.0" , "/nix/store/byxma1k0x7wjx8dc5cxds7r368rpkfvc-data-default-instances-old-locale-0.0.1" , "/nix/store/p53xn8arw5fzcwd6knxf0n6kw41nc9h8-old-locale-1.0.0.7" , "/nix/store/l52wn0q0h08qfdkwc3i56x8aw5dc2rnd-free-5.1.9" , "/nix/store/ml7lh9015mbsvm204lm5g3hyx34lgq8j-comonad-5.0.8" , "/nix/store/5bzybndz673xzs0d1wxq3b7lh9dxj8qi-distributive-0.6.2.1" , "/nix/store/cpvlf24g77k9xr6r6fyzjbv426vzjqri-tagged-0.8.6.1" , "/nix/store/z5lqggglm9x3i8sdxa5fpkyzi4dnd3qq-indexed-traversable-0.1.2" , "/nix/store/z5lqggglm9x3i8sdxa5fpkyzi4dnd3qq-indexed-traversable-0.1.2" , "/nix/store/3x786z0ccwvwqzv73c4f67npdz4y82h0-profunctors-5.6.2" , "/nix/store/fby63iyxkxpc8mvlhpl2zrbbv5vizw5m-bifunctors-5.5.12" , "/nix/store/967xhrs5d883kz3bn8zg33ayka1i5g71-contravariant-1.5.5" , "/nix/store/9v4pwm2sv83mmznzbqvg0h6i43rn02w4-StateVar-1.2.2" , "/nix/store/1fp8p3s21mp2fmgcp966ph6naqzq9cmy-semigroupoids-5.3.7" , "/nix/store/pixapjcbxnyaf6j6f9xylihqpsdwwi5x-transformers-base-0.4.6" , "/nix/store/4h9p2vk4mxdv2p22wybisfbf9y25wii7-ghc-paths-0.1.0.12" , "/nix/store/4h9p2vk4mxdv2p22wybisfbf9y25wii7-ghc-paths-0.1.0.12" , "/nix/store/gbnvqss70cwi6svgcxvq5h8j2j3ahnj2-refact-0.3.0.2" , "/nix/store/lw8ar1rcfiispasblbh3xiih7hqkqagp-uniplate-1.6.13" , "/nix/store/lw8ar1rcfiispasblbh3xiih7hqkqagp-uniplate-1.6.13" , "/nix/store/9b53cp017lrbc4czss59s52j80hp7kih-commitizen-3.12.0" , "/nix/store/1ljzhl5vnr7bynm06h8nay38lbjd6937-python3.11-argcomplete-3.1.2" , "/nix/store/ffll6glz3gwx342z0ch8wx30p5cnqz1z-python3-3.11.5" , "/nix/store/yb096fjkaksxshx215m2bw6xvpxby834-python3.11-charset-normalizer-3.2.0" , "/nix/store/3xhm5phgl4bzflns8m6p1ndlnzm4pxjy-python3.11-colorama-0.4.6" , "/nix/store/7v07diivci3zhnd213cifw25454xbv0q-python3.11-decli-0.6.1" , "/nix/store/lr2215vaw8c99i4hhrm5xg9fqw47vb2d-python3.11-importlib-metadata-6.8.0" , "/nix/store/xnk7c84b4n6k8h3sxlw0m7h086z0wdc9-python3.11-toml-0.10.2" , "/nix/store/73mygpxxl95cxk82m64iy1hrdlgg32zc-python3.11-zipp-3.16.2" , "/nix/store/xywcy1bid6gvympqkyjk4q42b0yw0q4d-python3.11-Jinja2-3.1.2" , "/nix/store/zvidxcjzvqj5y77qczrk5yr2g25s4nx4-python3.11-babel-2.12.1" , "/nix/store/i3kgyd1j05y5y2xhnrzw0f73741kss8w-python3.11-markupsafe-2.1.3" , "/nix/store/pzbnig8ba78nav1xzg25s9qqv7q21sa4-python3.11-packaging-23.1" , "/nix/store/ix3462njsm5rgpz3f1l52ns0dpwhdkbm-python3.11-pyyaml-6.0.1" , "/nix/store/i1nnln8yg63dj5fjvcycn97d4cpwj8cf-python3.11-questionary-2.0.1" , "/nix/store/mam3m9qrs2lby2m3w8lsb1fnahvlf8fh-python3.11-prompt-toolkit-3.0.39" , "/nix/store/pmgn71inl5yfmlxj5hv6ykq15zdrxvna-python3.11-six-1.16.0" , "/nix/store/jsdqajihisa9rsywb5f0gfgj91da2fxl-python3.11-wcwidth-0.2.6" , "/nix/store/c2g2jfc4bxk447qh1ddljdw17nwmn4kg-python3.11-setuptools-68.2.2" , "/nix/store/xqc71xl183xkzqhs9ifmzhyr0k6bmq7p-python3.11-termcolor-2.3.0" , "/nix/store/m63ikv2cijmksvfypjqi9dya2y19rnhf-python3.11-tomlkit-0.12.1" , "/nix/store/gc073r8hy6iqsxyxil8c8pjy7lnfzz4g-haskell-language-server-exe-haskell-language-server-1.8.0.0" , "/nix/store/x06rqrpzygpr7637zbpd4qbw0wbdj4x2-hlint-exe-hlint-3.5" , "/nix/store/f1yk9kbnv0zikz64hn9hx218d04jq73l-patchelf-0.15.0" , "/nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh" , "/nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh" , "/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh" , "/nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh" , "/nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh" , "/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh" , "/nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh" , "/nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh" , "/nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh" , "/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh" , "/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh" , "/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh" , "/nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds.sh" , "/nix/store/k6yka69n28j47wjhm14h41r2kbv262y6-gcc-wrapper-11.3.0" , "/nix/store/bxays0cw5nr88fmyr90y0kkwkji9vk1q-binutils-wrapper-2.38" ]},
    "pkgsBuildTarget": {"type": "array", "value": []},
    "pkgsHostHost": {"type": "array", "value": ["/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507" , "/nix/store/axr1pjba64p3afs2frkhb1ym2p20pid1-ncurses-6.3-p20220507-dev" , "/nix/store/9yj3jdmm5g0jfbcmhxg0bqd75yjhlx9g-ncurses-6.3-p20220507" , "/nix/store/6fncvg61gwjh1j7syy0nyki2j6xxf2ql-libffi-3.4.2" , "/nix/store/i96w3nijv65d78zx4bqma48ww51fx8is-gmp-with-cxx-6.2.1" , "/nix/store/c6sr4xl1qnr69d849wm4p34a0z5bikym-numactl-2.0.14" ]},
    "pkgsHostTarget": {"type": "array", "value": ["/nix/store/dj8fls24vlcmlp4vl77pzslniz8a40fm-aeson-lib-aeson-2.1.1.0" , "/nix/store/y9vj0z3610hp1g6hh6zv06h6m1gy12wv-aeson-pretty-lib-aeson-pretty-0.8.9" , "/nix/store/7y8p3i7sf4p6mkf52kfs6p57x230j98k-base16-bytestring-lib-base16-bytestring-1.0.2.0" , "/nix/store/fc4lcdy27qc8a90sccw03dlg7jh205zi-cardano-binary-lib-cardano-binary-1.5.0.0.0.0.0.2" , "/nix/store/rmm9lg0ra3f5884baizi2q4x0r3gia4m-cborg-lib-cborg-0.2.8.0" , "/nix/store/vf94mxzs7xi501cj4rbmzaj6b512vh39-data-default-lib-data-default-0.7.1.1" , "/nix/store/qrxdl47dzyfb1if3hgdirjbz2f3cn2f8-liqwid-plutarch-extra-lib-liqwid-plutarch-extra-3.21.1" , "/nix/store/k6778xs2f8akraq9mbmrdyx4mcazy0fa-liqwid-script-export-lib-liqwid-script-export-2.3.0" , "/nix/store/gc7nh1gqlszz4k0dkbvsk7ln9vxp45v2-plutarch-extra-lib-plutarch-extra-1.2.0" , "/nix/store/fwlzhlsr44kf19z7i9zwzf1b57a9vap5-plutarch-lib-plutarch-1.3.0" , "/nix/store/4q1hz3ln5xvfbzk8f1vg09shm82my2bk-plutus-core-lib-plutus-core-1.0.0.0.0.0.0.0.1" , "/nix/store/wj3a69j3qdp44407d531ypxxjc0pf4p0-plutus-ledger-api-lib-plutus-ledger-api-1.0.0.0.0.0.0.0.1" , "/nix/store/rfc3cbrf7gf9zwbgrg7x2d1gl89gpyqm-plutus-tx-lib-plutus-tx-1.0.0.0.0.0.0.0.1" , "/nix/store/y82v71wf72azwq84hh81vl9q8daqcxlq-ply-core-lib-ply-core-0.4.0" , "/nix/store/xvryfpyn61ha3fbybarq7130xr5n9k6z-ply-plutarch-lib-ply-plutarch-0.4.0" , "/nix/store/akmf98rp3aiids39789pf027wvq6qrrw-serialise-lib-serialise-0.2.6.0" ]},
    "pkgsTargetTarget": {"type": "array", "value": []},
    "postFixupHooks": {"type": "array", "value": ["_multioutPropagateDev" ]},
    "postUnpackHooks": {"type": "array", "value": ["_updateSourceDateEpochFromSourceRoot" ]},
    "preConfigureHooks": {"type": "array", "value": ["_multioutConfig" ]},
    "preFixupHooks": {"type": "array", "value": ["_moveToShare" , "_multioutDocs" , "_multioutDevs" ]},
    "prefix": {"type": "var", "value": "/nix/store/ddibj74digdcrvf7rs8x22y0hm4km8fg-ghc-shell-for-plutarch-template-env"},
    "propagatedBuildDepFiles": {"type": "array", "value": ["propagated-build-build-deps" , "propagated-native-build-inputs" , "propagated-build-target-deps" ]},
    "propagatedBuildInputs": {"type": "exported", "value": ""},
    "propagatedHostDepFiles": {"type": "array", "value": ["propagated-host-host-deps" , "propagated-build-inputs" ]},
    "propagatedNativeBuildInputs": {"type": "exported", "value": ""},
    "propagatedTargetDepFiles": {"type": "array", "value": ["propagated-target-target-deps" ]},
    "shell": {"type": "exported", "value": "/nix/store/p7bpdnxqd3i5hwm92mrscf7mvxk66404-bash-5.1-p16/bin/bash"},
    "shellHook": {"type": "exported", "value": "liqwid(){ c=$1; shift; nix run .#$c -- $@; }\nexport PATH=/nix/store/aa2mbn2qfa68g10bdygcdx64g8m9p1dw-python3.10-pre-commit-2.20.0/bin:$PATH\nif ! type -t git >/dev/null; then\n  # This happens in pure shells, including lorri\n  echo 1>&2 \"WARNING: pre-commit-hooks.nix: git command not found; skipping installation.\"\nelif ! /nix/store/9k1iggjf30bjkkn0pw4hmgjgp6p963ly-git-2.37.2/bin/git rev-parse --git-dir &> /dev/null; then\n  echo 1>&2 \"WARNING: pre-commit-hooks.nix: .git not found; skipping installation.\"\nelse\n  # These update procedures compare before they write, to avoid\n  # filesystem churn. This improves performance with watch tools like lorri\n  # and prevents installation loops by via lorri.\n\n  if readlink .pre-commit-config.yaml >/dev/null \\\n    && [[ $(readlink .pre-commit-config.yaml) == /nix/store/6az2x3izvzzhjxjhzd5w4d3gp0wmb7xs-pre-commit-config.json ]]; then\n    echo 1>&2 \"pre-commit-hooks.nix: hooks up to date\"\n  else\n    echo 1>&2 \"pre-commit-hooks.nix: updating $PWD repo\"\n\n    [ -L .pre-commit-config.yaml ] && unlink .pre-commit-config.yaml\n\n    if [ -e .pre-commit-config.yaml ]; then\n      echo 1>&2 \"pre-commit-hooks.nix: WARNING: Refusing to install because of pre-existing .pre-commit-config.yaml\"\n      echo 1>&2 \"    1. Translate .pre-commit-config.yaml contents to the new syntax in your Nix file\"\n      echo 1>&2 \"        see https://github.com/cachix/pre-commit-hooks.nix#getting-started\"\n      echo 1>&2 \"    2. remove .pre-commit-config.yaml\"\n      echo 1>&2 \"    3. add .pre-commit-config.yaml to .gitignore\"\n    else\n      ln -s /nix/store/6az2x3izvzzhjxjhzd5w4d3gp0wmb7xs-pre-commit-config.json .pre-commit-config.yaml\n      # Remove any previously installed hooks (since pre-commit itself has no convergent design)\n      hooks=\"pre-commit pre-merge-commit pre-push prepare-commit-msg commit-msg post-checkout post-commit\"\n      for hook in $hooks; do\n        pre-commit uninstall -t $hook\n      done\n      # Add hooks for configured stages (only) ...\n      if [ ! -z \"commit commit-msg\" ]; then\n        for stage in commit commit-msg; do\n          if [[ \"$stage\" == \"manual\" ]]; then\n            continue\n          fi\n          case $stage in\n            # if you amend these switches please also review $hooks above\n            commit | merge-commit | push)\n              stage=\"pre-\"$stage\n              pre-commit install -t $stage\n              ;;\n            prepare-commit-msg | commit-msg | post-checkout | post-commit)\n              pre-commit install -t $stage\n              ;;\n            *)\n              echo 1>&2 \"ERROR: pre-commit-hooks.nix: either $stage is not a valid stage or pre-commit-hooks.nix doesn't yet support it.\"\n              exit 1\n              ;;\n          esac\n        done\n      # ... or default 'pre-commit' hook\n      else\n        pre-commit install\n      fi\n    fi\n  fi\nfi\n"},
    "stdenv": {"type": "exported", "value": "/nix/store/cjl2qfa8h01l0qk1748ynbhwi1zv8vf6-stdenv-linux"},
    "strictDeps": {"type": "exported", "value": ""},
    "system": {"type": "exported", "value": "x86_64-linux"},
    "unpackCmdHooks": {"type": "array", "value": ["_defaultUnpack" ]},
    "withHaddock": {"type": "exported", "value": "1"}
  }
}